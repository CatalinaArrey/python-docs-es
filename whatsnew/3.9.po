# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-16 21:42+0200\n"
"PO-Revision-Date: 2021-10-20 16:16+0100\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Last-Translator: Claudia Millan <clmilneb@gmail.com>\n"
"Language-Team: \n"

#: ../Doc/whatsnew/3.9.rst:3
msgid "What's New In Python 3.9"
msgstr "Novedades de Python 3.9"

#: ../Doc/whatsnew/3.9.rst
msgid "Release"
msgstr "Versión"

#: ../Doc/whatsnew/3.9.rst:5
msgid "|release|"
msgstr "|release|"

#: ../Doc/whatsnew/3.9.rst
msgid "Date"
msgstr "Fecha"

#: ../Doc/whatsnew/3.9.rst:6
msgid "|today|"
msgstr "|today|"

#: ../Doc/whatsnew/3.9.rst
msgid "Editor"
msgstr "Editor"

#: ../Doc/whatsnew/3.9.rst:7
msgid "Łukasz Langa"
msgstr "Łukasz Langa"

#: ../Doc/whatsnew/3.9.rst:47
msgid ""
"This article explains the new features in Python 3.9, compared to 3.8. "
"Python 3.9 was released on October 5th, 2020."
msgstr ""
"Este artículo explica las nuevas características de Python 3.9, en "
"comparación con 3.8. Python 3.9 fue lanzado el 5 de octubre de 2020."

#: ../Doc/whatsnew/3.9.rst:50
msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr "Para más información, consulta el :ref:`changelog <changelog>`."

#: ../Doc/whatsnew/3.9.rst:54
msgid ":pep:`596` - Python 3.9 Release Schedule"
msgstr ":pep:`596` - Python 3.9 Release Schedule"

#: ../Doc/whatsnew/3.9.rst:58
msgid "Summary -- Release highlights"
msgstr "Resumen -- Puntos destacados del lanzamiento"

#: ../Doc/whatsnew/3.9.rst:63
msgid "New syntax features:"
msgstr "Nuevas características de sintaxis:"

#: ../Doc/whatsnew/3.9.rst:65
msgid ":pep:`584`, union operators added to ``dict``;"
msgstr ":pep:`584`, operadores de unión añadidos ``dict``;"

#: ../Doc/whatsnew/3.9.rst:66
msgid ":pep:`585`, type hinting generics in standard collections;"
msgstr ""
":pep:`585`, anotaciones de tipado genéricas en las colecciones estándar;"

#: ../Doc/whatsnew/3.9.rst:67
msgid ":pep:`614`, relaxed grammar restrictions on decorators."
msgstr ":pep:`614`, menores restricciones gramaticales en decoradores."

#: ../Doc/whatsnew/3.9.rst:69
msgid "New built-in features:"
msgstr "Nuevas características incorporadas:"

#: ../Doc/whatsnew/3.9.rst:71
#, fuzzy
msgid ":pep:`616`, string methods to remove prefixes and suffixes."
msgstr ":p ep:'616', métodos de cadena para eliminar prefijos y sufijos."

#: ../Doc/whatsnew/3.9.rst:73
#, fuzzy
msgid "New features in the standard library:"
msgstr "Nuevas características en la biblioteca estándar:"

#: ../Doc/whatsnew/3.9.rst:75
#, fuzzy
msgid ":pep:`593`, flexible function and variable annotations;"
msgstr ":p ep:'593', función flexible y anotaciones variables;"

#: ../Doc/whatsnew/3.9.rst:76
#, fuzzy
msgid ""
":func:`os.pidfd_open` added that allows process management without races and "
"signals."
msgstr ""
":func:'os.pidfd_open' añadida que permite la gestión de procesos sin "
"carreras y señales."

#: ../Doc/whatsnew/3.9.rst:79
#, fuzzy
msgid "Interpreter improvements:"
msgstr "Mejoras en el intérprete:"

#: ../Doc/whatsnew/3.9.rst:81
#, fuzzy
msgid ""
":pep:`573`, fast access to module state from methods of C extension types;"
msgstr ""
":p ep:'573', acceso rápido al estado del módulo desde métodos de tipos de "
"extensión C;"

#: ../Doc/whatsnew/3.9.rst:83
#, fuzzy
msgid ":pep:`617`, CPython now uses a new parser based on PEG;"
msgstr ":p ep:'617', CPython ahora usa un nuevo analizador basado en PEG;"

#: ../Doc/whatsnew/3.9.rst:84
#, fuzzy
msgid ""
"a number of Python builtins (range, tuple, set, frozenset, list, dict) are "
"now sped up using :pep:`590` vectorcall;"
msgstr ""
"una serie de python builtins (rango, tupla, set, frozenset, list, dict) "
"ahora se aceleran usando :p ep:'590' vectorcall;"

#: ../Doc/whatsnew/3.9.rst:86
#, fuzzy
msgid "garbage collection does not block on resurrected objects;"
msgstr "la recolección de basura no bloquea los objetos resucitados;"

#: ../Doc/whatsnew/3.9.rst:87
msgid ""
"a number of Python modules (:mod:`_abc`, :mod:`audioop`, :mod:`_bz2`, :mod:"
"`_codecs`, :mod:`_contextvars`, :mod:`_crypt`, :mod:`_functools`, :mod:"
"`_json`, :mod:`_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`_weakref`) now use multiphase initialization as defined by PEP "
"489;"
msgstr ""
"varios módulos de Python (:mod:'_abc', :mod:'audioop', :mod:'_bz2', :"
"mod:'_codecs', :mod:'_contextvars', :mod:'_crypt', :mod:'_functools', :"
"mod:'_json', :mod:'_locale', :mod:'math', :mod:'operator', :mod:'resource', :"
"mod:'time', :mod:'_weakref') ahora usan la inicialización multifásica según "
"lo definido por PEP 489;"

#: ../Doc/whatsnew/3.9.rst:92
#, fuzzy
msgid ""
"a number of standard library modules (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`_hashlib`, :mod:`pwd`, :mod:`_posixsubprocess`, :mod:`random`, :"
"mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) are now using the "
"stable ABI defined by PEP 384."
msgstr ""
"varios módulos de biblioteca estándar (:mod:'audioop', :mod:'ast', :"
"mod:'grp', :mod:'_hashlib', :mod:'pwd', :mod:'_posixsubprocess', :"
"mod:'random', :mod:'select', :mod:'struct', :mod:'termios', :mod:'zlib') "
"utilizan ahora el ABI estable definido por PEP 384."

#: ../Doc/whatsnew/3.9.rst:97
msgid "New library modules:"
msgstr "Nuevos módulos de la biblioteca:"

#: ../Doc/whatsnew/3.9.rst:99
#, fuzzy
msgid ""
":pep:`615`, the IANA Time Zone Database is now present in the standard "
"library in the :mod:`zoneinfo` module;"
msgstr ""
":p ep:'615', la base de datos de zonas horarias de la IANA ahora está "
"presente en la biblioteca estándar en el módulo :mod:'zoneinfo';"

#: ../Doc/whatsnew/3.9.rst:101
#, fuzzy
msgid ""
"an implementation of a topological sort of a graph is now provided in the "
"new :mod:`graphlib` module."
msgstr ""
"ahora se proporciona una implementación de un tipo topológico de gráfico en "
"el nuevo módulo :mod:'graphlib'."

#: ../Doc/whatsnew/3.9.rst:104
#, fuzzy
msgid "Release process changes:"
msgstr "Cambios en el proceso de lanzamiento:"

#: ../Doc/whatsnew/3.9.rst:106
#, fuzzy
msgid ":pep:`602`, CPython adopts an annual release cycle."
msgstr ":p ep:'602', CPython adopta un ciclo de lanzamiento anual."

#: ../Doc/whatsnew/3.9.rst:110
#, fuzzy
msgid "You should check for DeprecationWarning in your code"
msgstr "Debe comprobar si hay DeprecationWarning en el código"

#: ../Doc/whatsnew/3.9.rst:112
#, fuzzy
msgid ""
"When Python 2.7 was still supported, a lot of functionality in Python 3 was "
"kept for backward compatibility with Python 2.7. With the end of Python 2 "
"support, these backward compatibility layers have been removed, or will be "
"removed soon. Most of them emitted a :exc:`DeprecationWarning` warning for "
"several years. For example, using ``collections.Mapping`` instead of "
"``collections.abc.Mapping`` emits a :exc:`DeprecationWarning` since Python "
"3.3, released in 2012."
msgstr ""
"Cuando Python 2.7 todavía era compatible, se mantuvo una gran cantidad de "
"funcionalidad en Python 3 para la compatibilidad con versiones anteriores de "
"Python 2.7. Con el fin del soporte de Python 2, estas capas de "
"compatibilidad con versiones anteriores se han eliminado o se eliminarán "
"pronto. La mayoría de ellos emitieron una advertencia :"
"exc:'DeprecationWarning' durante varios años. Por ejemplo, usando "
"''colecciones. Mapping'' en lugar de ''collections.abc.Mapping'' emite un :"
"exc:'DeprecationWarning' desde Python 3.3, lanzado en 2012."

#: ../Doc/whatsnew/3.9.rst:120
#, fuzzy
msgid ""
"Test your application with the :option:`-W` ``default`` command-line option "
"to see :exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, or "
"even with :option:`-W` ``error`` to treat them as errors. :ref:`Warnings "
"Filter <warning-filter>` can be used to ignore warnings from third-party "
"code."
msgstr ""
"Pruebe su aplicación con la opción de línea de comandos :option:'-W' "
"''default'' para ver :exc:'DeprecationWarning' y :"
"exc:'PendingDeprecationWarning', o incluso con :option:'-W' ''error'' para "
"tratarlos como errores. :ref:'Filtro de <warning-filter>advertencias' se "
"puede utilizar para ignorar las advertencias del código de terceros.</"
"warning-filter>"

#: ../Doc/whatsnew/3.9.rst:125
#, fuzzy
msgid ""
"Python 3.9 is the last version providing those Python 2 backward "
"compatibility layers, to give more time to Python projects maintainers to "
"organize the removal of the Python 2 support and add support for Python 3.9."
msgstr ""
"Python 3.9 es la última versión que proporciona esas capas de compatibilidad "
"con versiones anteriores de Python 2, para dar más tiempo a los mantenedores "
"de proyectos de Python para organizar la eliminación del soporte de Python 2 "
"y agregar soporte para Python 3.9."

#: ../Doc/whatsnew/3.9.rst:129
#, fuzzy
msgid ""
"Aliases to :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"in the :mod:`collections` module, like ``collections.Mapping`` alias to :"
"class:`collections.abc.Mapping`, are kept for one last release for backward "
"compatibility. They will be removed from Python 3.10."
msgstr ""
"Alias a :ref:'Abstract Base <collections-abstract-base-classes>Classes' en "
"el módulo :mod:'collections', como ''collections. La asignación del alias '' "
"a :class:'collections.abc.Mapping', se mantiene durante una última versión "
"para la compatibilidad con versiones anteriores. Se eliminarán de Python "
"3.10.</collections-abstract-base-classes>"

#: ../Doc/whatsnew/3.9.rst:134
#, fuzzy
msgid ""
"More generally, try to run your tests in the :ref:`Python Development Mode "
"<devmode>` which helps to prepare your code to make it compatible with the "
"next Python version."
msgstr ""
"De manera más general, intente ejecutar sus pruebas en el :ref: 'Modo de "
"desarrollo <devmode>de Python', que ayuda a preparar su código para que sea "
"compatible con la próxima versión de Python.</devmode>"

#: ../Doc/whatsnew/3.9.rst:138
#, fuzzy
msgid ""
"Note: a number of pre-existing deprecations were removed in this version of "
"Python as well. Consult the :ref:`removed-in-python-39` section."
msgstr ""
"Nota: también se eliminaron varias obsolescencias preexistentes en esta "
"versión de Python. Consulte la sección :ref:'removed-in-python-39'."

#: ../Doc/whatsnew/3.9.rst:143 ../Doc/whatsnew/3.9.rst:1259
msgid "New Features"
msgstr "Nuevas Funciones"

#: ../Doc/whatsnew/3.9.rst:146
#, fuzzy
msgid "Dictionary Merge & Update Operators"
msgstr "Operadores de combinación y actualización de diccionarios"

#: ../Doc/whatsnew/3.9.rst:148
#, fuzzy
msgid ""
"Merge (``|``) and update (``|=``) operators have been added to the built-in :"
"class:`dict` class. Those complement the existing ``dict.update`` and "
"``{**d1, **d2}`` methods of merging dictionaries."
msgstr ""
"Se han agregado operadores merge (''|'') y update (''|='') a la clase :"
"class:'dict' integrada. Estos complementan los métodos existentes ''dict."
"update'' y ''{**d1, **d2}'' para fusionar diccionarios."

#: ../Doc/whatsnew/3.9.rst:152 ../Doc/whatsnew/3.9.rst:285
#, fuzzy
msgid "Example::"
msgstr "He aquí un pequeño pero realista ejemplo::"

#: ../Doc/whatsnew/3.9.rst:161
#, fuzzy
msgid ""
"See :pep:`584` for a full description. (Contributed by Brandt Bucher in :"
"issue:`36144`.)"
msgstr ""
"Véase :p ep:'584' para una descripción completa. (Contribución de Brandt "
"Bucher en :issue:'36144'.)"

#: ../Doc/whatsnew/3.9.rst:165
#, fuzzy
msgid "New String Methods to Remove Prefixes and Suffixes"
msgstr "Nuevos métodos de cadena para quitar prefijos y sufijos"

#: ../Doc/whatsnew/3.9.rst:167
#, fuzzy
msgid ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` and :meth:`str."
"removesuffix(suffix)<str.removesuffix>` have been added to easily remove an "
"unneeded prefix or a suffix from a string. Corresponding ``bytes``, "
"``bytearray``, and ``collections.UserString`` methods have also been added. "
"See :pep:`616` for a full description. (Contributed by Dennis Sweeney in :"
"issue:`39939`.)"
msgstr ""
":meth:'str.removeprefix(prefix)<str.removeprefix>' y :meth:'str."
"removesuffix(suffix)<str.removesuffix>' se han añadido para eliminar "
"fácilmente un prefijo innecesario o un sufijo de una cadena. Las "
"correspondientes colecciones ''bytes'', ''bytearray'' y ''. También se han "
"agregado métodos UserString''. Véase :p ep:'616' para una descripción "
"completa. (Contribución de Dennis Sweeney en :issue:'39939'.)"

#: ../Doc/whatsnew/3.9.rst:175
#, fuzzy
msgid "Type Hinting Generics in Standard Collections"
msgstr ""
":pep:`585`, anotaciones de tipado genéricas en las colecciones estándar;"

#: ../Doc/whatsnew/3.9.rst:177
#, fuzzy
msgid ""
"In type annotations you can now use built-in collection types such as "
"``list`` and ``dict`` as generic types instead of importing the "
"corresponding capitalized types (e.g. ``List`` or ``Dict``) from "
"``typing``.  Some other types in the standard library are also now generic, "
"for example ``queue.Queue``."
msgstr ""
"En las anotaciones de tipo, ahora puede usar tipos de colección integrados "
"como ''list'' y ''dict'' como tipos genéricos en lugar de importar los tipos "
"en mayúsculas correspondientes (por ejemplo, ''List'' o ''Dict'') desde "
"''typing''.  Algunos otros tipos en la biblioteca estándar también son ahora "
"genéricos, por ejemplo, ''cola. Cola''."

#: ../Doc/whatsnew/3.9.rst:183 ../Doc/whatsnew/3.9.rst:1147
msgid "Example:"
msgstr "Ejemplo:"

#: ../Doc/whatsnew/3.9.rst:191
#, fuzzy
msgid ""
"See :pep:`585` for more details.  (Contributed by Guido van Rossum, Ethan "
"Smith, and Batuhan Taşkaya in :issue:`39481`.)"
msgstr ""
"Ver :p ep:'585' para más detalles.  (Contribución de Guido van Rossum, Ethan "
"Smith y Batuhan Taşkaya en :issue:'39481'.)"

#: ../Doc/whatsnew/3.9.rst:195
#, fuzzy
msgid "New Parser"
msgstr "Nuevo analizador"

#: ../Doc/whatsnew/3.9.rst:197
#, fuzzy
msgid ""
"Python 3.9 uses a new parser, based on `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ instead of `LL(1) <https://en.wikipedia.org/"
"wiki/LL_parser>`_.  The new parser's performance is roughly comparable to "
"that of the old parser, but the PEG formalism is more flexible than LL(1) "
"when it comes to designing new language features.  We'll start using this "
"flexibility in Python 3.10 and later."
msgstr ""
"Python 3.9 utiliza un nuevo analizador, basado en 'PEG <https://en.wikipedia."
"org/wiki/Parsing_expression_grammar>'_ en lugar de 'LL(1) <https://en."
"wikipedia.org/wiki/LL_parser>'_.  El rendimiento del nuevo analizador es "
"aproximadamente comparable al del antiguo analizador, pero el formalismo PEG "
"es más flexible que LL(1) cuando se trata de diseñar nuevas características "
"del lenguaje.  Comenzaremos a usar esta flexibilidad en Python 3.10 y "
"posteriores."

#: ../Doc/whatsnew/3.9.rst:205
#, fuzzy
msgid ""
"The :mod:`ast` module uses the new parser and produces the same AST as the "
"old parser."
msgstr ""
"El módulo :mod:'ast' utiliza el nuevo analizador y produce el mismo AST que "
"el analizador anterior."

#: ../Doc/whatsnew/3.9.rst:208
#, fuzzy
msgid ""
"In Python 3.10, the old parser will be deleted and so will all functionality "
"that depends on it (primarily the :mod:`parser` module, which has long been "
"deprecated).  In Python 3.9 *only*, you can switch back to the LL(1) parser "
"using a command line switch (``-X oldparser``) or an environment variable "
"(``PYTHONOLDPARSER=1``)."
msgstr ""
"En Python 3.10, el analizador antiguo se eliminará y también toda la "
"funcionalidad que depende de él (principalmente el módulo :mod:'parser', que "
"ha estado en desuso durante mucho tiempo).  En Python 3.9 *only*, puede "
"volver al analizador LL(1) utilizando un modificador de línea de comandos "
"(''-X oldparser'') o una variable de entorno (''PYTHONOLDPARSER=1'')."

#: ../Doc/whatsnew/3.9.rst:214
#, fuzzy
msgid ""
"See :pep:`617` for more details.  (Contributed by Guido van Rossum, Pablo "
"Galindo and Lysandros Nikolaou in :issue:`40334`.)"
msgstr ""
"Ver :p ep:'617' para más detalles.  (Contribución de Guido van Rossum, Pablo "
"Galindo y Lysandros Nikolaou en :issue:'40334'.)"

#: ../Doc/whatsnew/3.9.rst:219
msgid "Other Language Changes"
msgstr "Otros cambios de lenguaje"

#: ../Doc/whatsnew/3.9.rst:221
#, fuzzy
msgid ""
":func:`__import__` now raises :exc:`ImportError` instead of :exc:"
"`ValueError`, which used to occur when a relative import went past its top-"
"level package. (Contributed by Ngalim Siregar in :issue:`37444`.)"
msgstr ""
":func:'__import__' ahora genera :exc:'ImportError' en lugar de :"
"exc:'ValueError', que solía ocurrir cuando una importación relativa pasaba "
"por su paquete de nivel superior. (Contribución de Ngalim Siregar en :"
"issue:'37444'.)"

#: ../Doc/whatsnew/3.9.rst:226
#, fuzzy
msgid ""
"Python now gets the absolute path of the script filename specified on the "
"command line (ex: ``python3 script.py``): the ``__file__`` attribute of the :"
"mod:`__main__` module became an absolute path, rather than a relative path. "
"These paths now remain valid after the current directory is changed by :func:"
"`os.chdir`. As a side effect, the traceback also displays the absolute path "
"for :mod:`__main__` module frames in this case. (Contributed by Victor "
"Stinner in :issue:`20443`.)"
msgstr ""
"Python ahora obtiene la ruta absoluta del nombre de archivo de script "
"especificado en la línea de comandos (por ejemplo: ''python3 script.py''): "
"el atributo ''__file__'' del módulo :mod:'__main__' se convirtió en una ruta "
"absoluta, en lugar de una ruta relativa. Estas rutas ahora siguen siendo "
"válidas después de que el directorio actual se cambie por :func:'os.chdir'. "
"Como efecto secundario, el traceback también muestra la ruta absoluta para "
"los marcos del módulo :mod:'__main__' en este caso. (Contribución de Victor "
"Stinner en :issue:'20443'.)"

#: ../Doc/whatsnew/3.9.rst:234
#, fuzzy
msgid ""
"In the :ref:`Python Development Mode <devmode>` and in :ref:`debug build "
"<debug-build>`, the *encoding* and *errors* arguments are now checked for "
"string encoding and decoding operations. Examples: :func:`open`, :meth:`str."
"encode` and :meth:`bytes.decode`."
msgstr ""
"En el :ref:'Python Development <devmode>Mode' y en :ref:'debug <debug-"
"build>build', los argumentos *encoding* y *errors* ahora se comprueban para "
"las operaciones de codificación y decodificación de cadenas. Ejemplos: :"
"func:'open', :meth:'str.encode' y :meth:'bytes.decode'.</debug-build> </"
"devmode>"

#: ../Doc/whatsnew/3.9.rst:239
#, fuzzy
msgid ""
"By default, for best performance, the *errors* argument is only checked at "
"the first encoding/decoding error and the *encoding* argument is sometimes "
"ignored for empty strings. (Contributed by Victor Stinner in :issue:`37388`.)"
msgstr ""
"De forma predeterminada, para obtener el mejor rendimiento, el argumento "
"*errors* solo se comprueba en el primer error de codificación/decodificación "
"y el argumento *encoding* a veces se ignora para las cadenas vacías. "
"(Contribución de Victor Stinner en :issue:'37388'.)"

#: ../Doc/whatsnew/3.9.rst:244
#, fuzzy
msgid ""
"``\"\".replace(\"\", s, n)`` now returns ``s`` instead of an empty string "
"for all non-zero ``n``.  It is now consistent with ``\"\".replace(\"\", "
"s)``. There are similar changes for :class:`bytes` and :class:`bytearray` "
"objects. (Contributed by Serhiy Storchaka in :issue:`28029`.)"
msgstr ""
"''\"\".replace(\"\", s, n)'' ahora devuelve ''s'' en lugar de una cadena "
"vacía para todos los ''n'' distintos de cero.  Ahora es consistente con ''\"."
"replace(\"\", s)''. Hay cambios similares para los objetos :class:'bytes' y :"
"class:'bytearray'. (Contribución de Serhiy Storchaka en :issue:'28029'.)"

#: ../Doc/whatsnew/3.9.rst:249
#, fuzzy
msgid ""
"Any valid expression can now be used as a :term:`decorator`.  Previously, "
"the grammar was much more restrictive.  See :pep:`614` for details. "
"(Contributed by Brandt Bucher in :issue:`39702`.)"
msgstr ""
"Cualquier expresión válida ahora se puede usar como un :"
"término:'decorador'.  Anteriormente, la gramática era mucho más "
"restrictiva.  Véase :p ep:'614' para más detalles. (Contribución de Brandt "
"Bucher en :issue:'39702'.)"

#: ../Doc/whatsnew/3.9.rst:253
#, fuzzy
msgid ""
"Improved help for the :mod:`typing` module. Docstrings are now shown for all "
"special forms and special generic aliases (like ``Union`` and ``List``). "
"Using :func:`help` with generic alias like ``List[int]`` will show the help "
"for the correspondent concrete type (``list`` in this case). (Contributed by "
"Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"Ayuda mejorada para el módulo :mod:'typing'. Ahora se muestran docstrings "
"para todas las formas especiales y alias genéricos especiales (como "
"''Unión'' y ''Lista''). El uso de :func:'help' con alias genéricos como "
"''List[int]'' mostrará la ayuda para el tipo concreto correspondiente "
"(''list'' en este caso). (Contribución de Serhiy Storchaka en :"
"issue:'40257'.)"

#: ../Doc/whatsnew/3.9.rst:259
#, fuzzy
msgid ""
"Parallel running of :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` is now prohibited, and ``ag_running`` now reflects the actual "
"running status of the async generator. (Contributed by Yury Selivanov in :"
"issue:`30773`.)"
msgstr ""
"La ejecución paralela de :meth:'~agen.aclose' / :meth:'~agen.asend' / :"
"meth:'~agen.athrow' ahora está prohibida, y ''ag_running'' ahora refleja el "
"estado de funcionamiento real del generador asincrónico. (Contribución de "
"Yury Selivanov en :issue:'30773'.)"

#: ../Doc/whatsnew/3.9.rst:264
#, fuzzy
msgid ""
"Unexpected errors in calling the ``__iter__`` method are no longer masked by "
"``TypeError`` in the :keyword:`in` operator and functions :func:`~operator."
"contains`, :func:`~operator.indexOf` and :func:`~operator.countOf` of the :"
"mod:`operator` module. (Contributed by Serhiy Storchaka in :issue:`40824`.)"
msgstr ""
"Los errores inesperados al llamar al método ''__iter__'' ya no están "
"enmascarados por ''TypeError'' en el operador :keyword:'in' y las funciones :"
"func:'~operator.contains', :func:'~operator.indexOf' y :func:'~operator."
"countOf' del módulo :mod:'operator'. (Contribución de Serhiy Storchaka en :"
"issue:'40824'.)"

#: ../Doc/whatsnew/3.9.rst:270
#, fuzzy
msgid ""
"Unparenthesized lambda expressions can no longer be the expression part in "
"an ``if`` clause in comprehensions and generator expressions. See :issue:"
"`41848` and :issue:`43755` for details."
msgstr ""
"Las expresiones lambda no aparentizadas ya no pueden ser la parte de "
"expresión en una cláusula ''if'' en comprensiones y expresiones generadoras. "
"Consulte :issue:'41848' y :issue:'43755' para obtener más información."

#: ../Doc/whatsnew/3.9.rst:276
msgid "New Modules"
msgstr "Nuevos Módulos"

#: ../Doc/whatsnew/3.9.rst:279
#, fuzzy
msgid "zoneinfo"
msgstr "zoneinfo"

#: ../Doc/whatsnew/3.9.rst:281
#, fuzzy
msgid ""
"The :mod:`zoneinfo` module brings support for the IANA time zone database to "
"the standard library. It adds :class:`zoneinfo.ZoneInfo`, a concrete :class:"
"`datetime.tzinfo` implementation backed by the system's time zone data."
msgstr ""
"El módulo :mod:'zoneinfo' brinda soporte para la base de datos de zona "
"horaria IANA a la biblioteca estándar. Añade :class:'zoneinfo. ZoneInfo', "
"una implementación concreta de :class:'datetime.tzinfo' respaldada por los "
"datos de zona horaria del sistema."

#: ../Doc/whatsnew/3.9.rst:305
#, fuzzy
msgid ""
"As a fall-back source of data for platforms that don't ship the IANA "
"database, the |tzdata|_ module was released as a first-party package -- "
"distributed via PyPI and maintained by the CPython core team."
msgstr ""
"Como fuente de datos de respaldo para plataformas que no envían la base de "
"datos de la IANA, el módulo |tzdata|_ se lanzó como un paquete de primera "
"parte, distribuido a través de PyPI y mantenido por el equipo central de "
"CPython."

#: ../Doc/whatsnew/3.9.rst:314
#, fuzzy
msgid ""
":pep:`615` -- Support for the IANA Time Zone Database in the Standard Library"
msgstr ""
":p ep:'615' -- Soporte para la base de datos de zonas horarias de la IANA en "
"la biblioteca estándar"

#: ../Doc/whatsnew/3.9.rst:315
#, fuzzy
msgid "PEP written and implemented by Paul Ganssle"
msgstr "PEP escrito e implementado por Paul Ganssle"

#: ../Doc/whatsnew/3.9.rst:319
#, fuzzy
msgid "graphlib"
msgstr "graphlib"

#: ../Doc/whatsnew/3.9.rst:321
#, fuzzy
msgid ""
"A new module, :mod:`graphlib`, was added that contains the :class:`graphlib."
"TopologicalSorter` class to offer functionality to perform topological "
"sorting of graphs. (Contributed by Pablo Galindo, Tim Peters and Larry "
"Hastings in :issue:`17005`.)"
msgstr ""
"Se agregó un nuevo módulo, :mod:'graphlib', que contiene el :"
"class:'graphlib. TopologicalSorter' para ofrecer funcionalidad para realizar "
"la clasificación topológica de gráficos. (Contribución de Pablo Galindo, Tim "
"Peters y Larry Hastings en :issue:'17005'.)"

#: ../Doc/whatsnew/3.9.rst:328
#, fuzzy
msgid "Improved Modules"
msgstr "Módulos nuevos y mejorados"

#: ../Doc/whatsnew/3.9.rst:331
#, fuzzy
msgid "ast"
msgstr "Ast"

#: ../Doc/whatsnew/3.9.rst:333
#, fuzzy
msgid ""
"Added the *indent* option to :func:`~ast.dump` which allows it to produce a "
"multiline indented output. (Contributed by Serhiy Storchaka in :issue:"
"`37995`.)"
msgstr ""
"Se agregó la opción *indent* a :func:'~ast.dump' que le permite producir una "
"salida con sangría multilínea. (Contribución de Serhiy Storchaka en :"
"issue:'37995'.)"

#: ../Doc/whatsnew/3.9.rst:337
#, fuzzy
msgid ""
"Added :func:`ast.unparse` as a function in the :mod:`ast` module that can be "
"used to unparse an :class:`ast.AST` object and produce a string with code "
"that would produce an equivalent :class:`ast.AST` object when parsed. "
"(Contributed by Pablo Galindo and Batuhan Taskaya in :issue:`38870`.)"
msgstr ""
"Se ha añadido :func:'ast.unparse' como una función en el módulo :mod:'ast' "
"que se puede utilizar para desparasar un :class:'ast. AST' y produce una "
"cadena con código que produciría un equivalente :class:'ast. AST' objeto "
"cuando se analiza. (Contribución de Pablo Galindo y Batuhan Taskaya en :"
"issue:'38870'.)"

#: ../Doc/whatsnew/3.9.rst:342
#, fuzzy
msgid ""
"Added docstrings to AST nodes that contains the ASDL signature used to "
"construct that node. (Contributed by Batuhan Taskaya in :issue:`39638`.)"
msgstr ""
"Se agregaron docstrings a los nodos AST que contienen la firma ASDL "
"utilizada para construir ese nodo. (Contribución de Batuhan Taskaya en :"
"issue:'39638'.)"

#: ../Doc/whatsnew/3.9.rst:346
#, fuzzy
msgid "asyncio"
msgstr "asyncio"

#: ../Doc/whatsnew/3.9.rst:348
#, fuzzy
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Debido a importantes problemas de seguridad, el parámetro *reuse_address* "
"de :meth:'asyncio.loop.create_datagram_endpoint' ya no es compatible. Esto "
"se debe al comportamiento de la opción de socket ''SO_REUSEADDR'' en UDP. "
"Para obtener más detalles, consulte la documentación de ''loop."
"create_datagram_endpoint()''. (Contribución de Kyle Stanley, Antoine Pitrou "
"y Yury Selivanov en :issue:'37228'.)"

#: ../Doc/whatsnew/3.9.rst:355
#, fuzzy
msgid ""
"Added a new :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor` that schedules a shutdown for the default "
"executor that waits on the :class:`~concurrent.futures.ThreadPoolExecutor` "
"to finish closing. Also, :func:`asyncio.run` has been updated to use the "
"new :term:`coroutine`. (Contributed by Kyle Stanley in :issue:`34037`.)"
msgstr ""
"Se ha agregado un nuevo :term:'coroutine' :meth:'~asyncio.loop."
"shutdown_default_executor' que programa un apagado para el ejecutor "
"predeterminado que espera en el :class:'~concurrent.futures."
"ThreadPoolExecutor' para finalizar el cierre. Además, :func:'asyncio.run' se "
"ha actualizado para usar el nuevo :term:'coroutine'. (Contribución de Kyle "
"Stanley en :issue:'34037'.)"

#: ../Doc/whatsnew/3.9.rst:361
#, fuzzy
msgid ""
"Added :class:`asyncio.PidfdChildWatcher`, a Linux-specific child watcher "
"implementation that polls process file descriptors. (:issue:`38692`)"
msgstr ""
"Añadido :class:'asyncio. PidfdChildWatcher', una implementación de "
"observador infantil específica de Linux que sondea los descriptores de "
"archivos de proceso. (:issue:'38692')"

#: ../Doc/whatsnew/3.9.rst:364
#, fuzzy
msgid ""
"Added a new :term:`coroutine` :func:`asyncio.to_thread`. It is mainly used "
"for running IO-bound functions in a separate thread to avoid blocking the "
"event loop, and essentially works as a high-level version of :meth:`~asyncio."
"loop.run_in_executor` that can directly take keyword arguments. (Contributed "
"by Kyle Stanley and Yury Selivanov in :issue:`32309`.)"
msgstr ""
"Se ha añadido un nuevo :term:'coroutine' :func:'asyncio.to_thread'. Se "
"utiliza principalmente para ejecutar funciones enlazadas a E/S en un "
"subproceso separado para evitar el bloqueo del bucle de eventos, y "
"esencialmente funciona como una versión de alto nivel de :meth:'~asyncio."
"loop.run_in_executor' que puede tomar directamente argumentos de palabras "
"clave. (Contribución de Kyle Stanley y Yury Selivanov en :issue:'32309'.)"

#: ../Doc/whatsnew/3.9.rst:370
#, fuzzy
msgid ""
"When cancelling the task due to a timeout, :meth:`asyncio.wait_for` will now "
"wait until the cancellation is complete also in the case when *timeout* is "
"<= 0, like it does with positive timeouts. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"Al cancelar la tarea debido a un tiempo de espera, :meth:'asyncio.wait_for' "
"ahora esperará hasta que se complete la cancelación también en el caso de "
"que *timeout* sea < = 0, como lo hace con los tiempos de espera positivos. "
"(Contribución de Elvis Pranskevichus en :issue:'32751'.)"

#: ../Doc/whatsnew/3.9.rst:375
#, fuzzy
msgid ""
":mod:`asyncio` now raises :exc:`TyperError` when calling incompatible "
"methods with an :class:`ssl.SSLSocket` socket. (Contributed by Ido Michael "
"in :issue:`37404`.)"
msgstr ""
":mod:'asyncio' ahora genera :exc:'TyperError' al llamar a métodos "
"incompatibles con un :class:'ssl. Socket SSLSocket'. (Contribución de Ido "
"Michael en :issue:'37404'.)"

#: ../Doc/whatsnew/3.9.rst:380
#, fuzzy
msgid "compileall"
msgstr "compileall"

#: ../Doc/whatsnew/3.9.rst:382
#, fuzzy
msgid ""
"Added new possibility to use hardlinks for duplicated ``.pyc`` files: "
"*hardlink_dupes* parameter and --hardlink-dupes command line option. "
"(Contributed by  Lumír 'Frenzy' Balhar in :issue:`40495`.)"
msgstr ""
"Se agregó una nueva posibilidad de usar enlaces duros para archivos ''.pyc'' "
"duplicados: parámetro *hardlink_dupes* y opción de línea de comandos --"
"hardlink-dupes. (Contribución de Lumír 'Frenzy' Balhar en :issue:'40495'.)"

#: ../Doc/whatsnew/3.9.rst:385
#, fuzzy
msgid ""
"Added new options for path manipulation in resulting ``.pyc`` files: "
"*stripdir*, *prependdir*, *limit_sl_dest* parameters and -s, -p, -e command "
"line options. Added the possibility to specify the option for an "
"optimization level multiple times. (Contributed by Lumír 'Frenzy' Balhar in :"
"issue:`38112`.)"
msgstr ""
"Se agregaron nuevas opciones para la manipulación de rutas en los archivos "
"''.pyc'' resultantes: *stripdir*, *prependdir*, parámetros *limit_sl_dest* y "
"opciones de línea de comandos -s, -p, -e. Se agregó la posibilidad de "
"especificar la opción para un nivel de optimización varias veces. "
"(Contribución de Lumír 'Frenzy' Balhar en :issue:'38112'.)"

#: ../Doc/whatsnew/3.9.rst:390
#, fuzzy
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../Doc/whatsnew/3.9.rst:392
#, fuzzy
msgid ""
"Added a new *cancel_futures* parameter to :meth:`concurrent.futures.Executor."
"shutdown` that cancels all pending futures which have not started running, "
"instead of waiting for them to complete before shutting down the executor. "
"(Contributed by Kyle Stanley in :issue:`39349`.)"
msgstr ""
"Se ha agregado un nuevo parámetro *cancel_futures* a :meth:'concurrent."
"futures.Executor.shutdown' que cancela todos los futuros pendientes que no "
"han comenzado a ejecutarse, en lugar de esperar a que se completen antes de "
"cerrar el ejecutor. (Contribución de Kyle Stanley en :issue:'39349'.)"

#: ../Doc/whatsnew/3.9.rst:398
#, fuzzy
msgid ""
"Removed daemon threads from :class:`~concurrent.futures.ThreadPoolExecutor` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`. This improves "
"compatibility with subinterpreters and predictability in their shutdown "
"processes. (Contributed by Kyle Stanley in :issue:`39812`.)"
msgstr ""
"Se han eliminado los subprocesos de daemon de :class:'~concurrent.futures."
"ThreadPoolExecutor' y :class:'~concurrent.futures.ProcessPoolExecutor'. Esto "
"mejora la compatibilidad con los subinterpreterales y la previsibilidad en "
"sus procesos de apagado. (Contribución de Kyle Stanley en :issue:'39812'.)"

#: ../Doc/whatsnew/3.9.rst:403
#, fuzzy
msgid ""
"Workers in :class:`~concurrent.futures.ProcessPoolExecutor` are now spawned "
"on demand, only when there are no available idle workers to reuse. This "
"optimizes startup overhead and reduces the amount of lost CPU time to idle "
"workers. (Contributed by Kyle Stanley in :issue:`39207`.)"
msgstr ""
"Los trabajadores de :class:'~concurrent.futures.ProcessPoolExecutor' ahora "
"se generan bajo demanda, solo cuando no hay trabajadores inactivos "
"disponibles para reutilizar. Esto optimiza la sobrecarga de inicio y reduce "
"la cantidad de tiempo de CPU perdido para los trabajadores inactivos. "
"(Contribución de Kyle Stanley en :issue:'39207'.)"

#: ../Doc/whatsnew/3.9.rst:409
#, fuzzy
msgid "curses"
msgstr "Maldiciones"

#: ../Doc/whatsnew/3.9.rst:411
#, fuzzy
msgid ""
"Added :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :func:"
"`curses.get_tabsize`, and :func:`curses.set_tabsize` functions. (Contributed "
"by Anthony Sottile in :issue:`38312`.)"
msgstr ""
"Se agregaron las funciones :func:'curses.get_escdelay', :func:'curses."
"set_escdelay', :func:'curses.get_tabsize', y :func:'curses.set_tabsize'. "
"(Contribución de Anthony Sottile en :issue:'38312'.)"

#: ../Doc/whatsnew/3.9.rst:416
msgid "datetime"
msgstr "fecha y hora"

#: ../Doc/whatsnew/3.9.rst:417
#, fuzzy
msgid ""
"The :meth:`~datetime.date.isocalendar()` of :class:`datetime.date` and :meth:"
"`~datetime.datetime.isocalendar()` of :class:`datetime.datetime` methods now "
"returns a :func:`~collections.namedtuple` instead of a :class:`tuple`. "
"(Contributed by Dong-hee Na in :issue:`24416`.)"
msgstr ""
"El :meth:'~datetime.date.isocalendar()' de :class:'datetime.date' y :"
"meth:'~datetime.datetime.isocalendar()' de los métodos :class:'datetime."
"datetime' devuelve ahora un :func:'~collections.namedtuple' en lugar de un :"
"class:'tuple'. (Contribución de Dong-hee Na en :issue:'24416'.)"

#: ../Doc/whatsnew/3.9.rst:423
#, fuzzy
msgid "distutils"
msgstr ""
"Aquí hay un ejemplo :file:`setup.py` con clasificadores, escrito para que "
"sea compatible con las versiones más antiguas de Distutils::"

#: ../Doc/whatsnew/3.9.rst:425
#, fuzzy
msgid ""
"The :command:`upload` command now creates SHA2-256 and Blake2b-256 hash "
"digests. It skips MD5 on platforms that block MD5 digest. (Contributed by "
"Christian Heimes in :issue:`40698`.)"
msgstr ""
"El comando :command:'upload' ahora crea resúmenes hash SHA2-256 y "
"Blake2b-256. Omite MD5 en plataformas que bloquean el resumen de MD5. "
"(Contribución de Christian Heimes en :issue:'40698'.)"

#: ../Doc/whatsnew/3.9.rst:430
#, fuzzy
msgid "fcntl"
msgstr "fcntl"

#: ../Doc/whatsnew/3.9.rst:432
#, fuzzy
msgid ""
"Added constants :data:`~fcntl.F_OFD_GETLK`, :data:`~fcntl.F_OFD_SETLK` and :"
"data:`~fcntl.F_OFD_SETLKW`. (Contributed by Dong-hee Na in :issue:`38602`.)"
msgstr ""
"Se agregaron constantes :d ata:'~fcntl. F_OFD_GETLK', :d ata:'~fcntl. "
"F_OFD_SETLK' y :d ata:'~fcntl. F_OFD_SETLKW'. (Contribución de Dong-hee Na "
"en :issue:'38602'.)"

#: ../Doc/whatsnew/3.9.rst:437
#, fuzzy
msgid "ftplib"
msgstr "ftplib"

#: ../Doc/whatsnew/3.9.rst:439
#, fuzzy
msgid ""
":class:`~ftplib.FTP` and :class:`~ftplib.FTP_TLS` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:'~ftplib. FTP' y :class:'~ftplib. FTP_TLS' ahora generan un :"
"class:'ValueError' si el tiempo de espera dado para su constructor es cero "
"para evitar la creación de un socket sin bloqueo. (Contribución de Dong-hee "
"Na en :issue:'39259'.)"

#: ../Doc/whatsnew/3.9.rst:444
#, fuzzy
msgid "gc"
msgstr "Gc"

#: ../Doc/whatsnew/3.9.rst:446
#, fuzzy
msgid ""
"When the garbage collector makes a collection in which some objects "
"resurrect (they are reachable from outside the isolated cycles after the "
"finalizers have been executed), do not block the collection of all objects "
"that are still unreachable. (Contributed by Pablo Galindo and Tim Peters in :"
"issue:`38379`.)"
msgstr ""
"Cuando el recolector de basura realiza una colección en la que algunos "
"objetos resucitan (son accesibles desde fuera de los ciclos aislados después "
"de que se hayan ejecutado los finalizadores), no bloquee la colección de "
"todos los objetos que aún son inalcanzables. (Contribución de Pablo Galindo "
"y Tim Peters en :issue:'38379'.)"

#: ../Doc/whatsnew/3.9.rst:451
#, fuzzy
msgid ""
"Added a new function :func:`gc.is_finalized` to check if an object has been "
"finalized by the garbage collector. (Contributed by Pablo Galindo in :issue:"
"`39322`.)"
msgstr ""
"Se ha añadido una nueva función :func:'gc.is_finalized' para comprobar si el "
"recolector de basura ha finalizado un objeto. (Contribución de Pablo Galindo "
"en :issue:'39322'.)"

#: ../Doc/whatsnew/3.9.rst:456
#, fuzzy
msgid "hashlib"
msgstr "hashlib"

#: ../Doc/whatsnew/3.9.rst:458
#, fuzzy
msgid ""
"The :mod:`hashlib` module can now use SHA3 hashes and SHAKE XOF from OpenSSL "
"when available. (Contributed by Christian Heimes in :issue:`37630`.)"
msgstr ""
"El módulo :mod:'hashlib' ahora puede usar hashes SHA3 y SHAKE XOF de OpenSSL "
"cuando esté disponible. (Contribución de Christian Heimes en :issue:'37630'.)"

#: ../Doc/whatsnew/3.9.rst:462
#, fuzzy
msgid ""
"Builtin hash modules can now be disabled with ``./configure --without-"
"builtin-hashlib-hashes`` or selectively enabled with e.g. ``./configure --"
"with-builtin-hashlib-hashes=sha3,blake2`` to force use of OpenSSL based "
"implementation. (Contributed by Christian Heimes in :issue:`40479`)"
msgstr ""
"Los módulos hash incorporados ahora se pueden deshabilitar con ''./configure "
"--without-builtin-hashlib-hashes'' o habilitarse selectivamente con, por "
"ejemplo, ''./configure --with-builtin-hashlib-hashes=sha3,blake2'' para "
"forzar el uso de la implementación basada en OpenSSL. (Contribución de "
"Christian Heimes en :issue:'40479')"

#: ../Doc/whatsnew/3.9.rst:470
msgid "http"
msgstr "http"

#: ../Doc/whatsnew/3.9.rst:472
#, fuzzy
msgid ""
"HTTP status codes ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` and ``425 "
"TOO_EARLY`` are added to :class:`http.HTTPStatus`. (Contributed by Dong-hee "
"Na in :issue:`39509` and Ross Rhodes in :issue:`39507`.)"
msgstr ""
"Los códigos de estado HTTP ''103 EARLY_HINTS'', ''418 IM_A_TEAPOT'' y ''425 "
"TOO_EARLY'' se agregan a :class:'http. HTTPStatus'. (Contribución de Dong-"
"hee Na en :issue:'39509' y Ross Rhodes en :issue:'39507'.)"

#: ../Doc/whatsnew/3.9.rst:476
#, fuzzy
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../Doc/whatsnew/3.9.rst:478
#, fuzzy
msgid ""
"Added option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"Se agregó la opción para desactivar el parpadeo del cursor.  (Contribución "
"de Zackery Spytz en :issue:'4603'.)"

#: ../Doc/whatsnew/3.9.rst:481
#, fuzzy
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"La tecla de escape ahora cierra las ventanas de finalización de IDLE.  "
"(Contribución de Johnny Najera en :issue:'38944'.)"

#: ../Doc/whatsnew/3.9.rst:484
#, fuzzy
msgid ""
"Added keywords to module name completion list.  (Contributed by Terry J. "
"Reedy in :issue:`37765`.)"
msgstr ""
"Se agregaron palabras clave a la lista de finalización de nombres de "
"módulos.  (Contribución de Terry J. Reedy en :issue:'37765'.)"

#: ../Doc/whatsnew/3.9.rst:487
#, fuzzy
msgid "The changes above have been backported to 3.8 maintenance releases."
msgstr ""
"Los cambios anteriores se han retroportado a versiones de mantenimiento 3.8."

#: ../Doc/whatsnew/3.9.rst:490
#, fuzzy
msgid "imaplib"
msgstr "imaplib"

#: ../Doc/whatsnew/3.9.rst:492
#, fuzzy
msgid ""
":class:`~imaplib.IMAP4` and :class:`~imaplib.IMAP4_SSL` now have an optional "
"*timeout* parameter for their constructors. Also, the :meth:`~imaplib.IMAP4."
"open` method now has an optional *timeout* parameter with this change. The "
"overridden methods of :class:`~imaplib.IMAP4_SSL` and :class:`~imaplib."
"IMAP4_stream` were applied to this change. (Contributed by Dong-hee Na in :"
"issue:`38615`.)"
msgstr ""
":class:'~imaplib. IMAP4' y :class:'~imaplib. IMAP4_SSL' ahora tienen un "
"parámetro opcional *timeout* para sus constructores. Además, el :"
"meth:'~imaplib. El método IMAP4.open' ahora tiene un parámetro *timeout* "
"opcional con este cambio. Los métodos anulados de :class:'~imaplib. "
"IMAP4_SSL' y :class:'~imaplib. IMAP4_stream' se aplicaron a este cambio. "
"(Contribución de Dong-hee Na en :issue:'38615'.)"

#: ../Doc/whatsnew/3.9.rst:499
#, fuzzy
msgid ""
":meth:`imaplib.IMAP4.unselect` is added. :meth:`imaplib.IMAP4.unselect` "
"frees server's resources associated with the selected mailbox and returns "
"the server to the authenticated state. This command performs the same "
"actions as :meth:`imaplib.IMAP4.close`, except that no messages are "
"permanently removed from the currently selected mailbox. (Contributed by "
"Dong-hee Na in :issue:`40375`.)"
msgstr ""
":meth:'imaplib. Se agrega IMAP4.unselect'. :meth:'imaplib. IMAP4.unselect' "
"libera los recursos del servidor asociados con el buzón seleccionado y "
"devuelve el servidor al estado autenticado. Este comando realiza las mismas "
"acciones que :meth:'imaplib. IMAP4.close', excepto que no se elimina "
"permanentemente ningún mensaje del buzón seleccionado actualmente. "
"(Contribución de Dong-hee Na en :issue:'40375'.)"

#: ../Doc/whatsnew/3.9.rst:507
#, fuzzy
msgid "importlib"
msgstr ""
"Un pequeño subconjunto del modulo :mod:`importlib`, `descrito abajo "
"<#importlib-section>`__."

#: ../Doc/whatsnew/3.9.rst:509
#, fuzzy
msgid ""
"To improve consistency with import statements, :func:`importlib.util."
"resolve_name` now raises :exc:`ImportError` instead of :exc:`ValueError` for "
"invalid relative import attempts. (Contributed by Ngalim Siregar in :issue:"
"`37444`.)"
msgstr ""
"Para mejorar la coherencia con las instrucciones import, :func:'importlib."
"util.resolve_name' ahora genera :exc:'ImportError' en lugar de :"
"exc:'ValueError' para los intentos de importación relativos no válidos. "
"(Contribución de Ngalim Siregar en :issue:'37444'.)"

#: ../Doc/whatsnew/3.9.rst:514
#, fuzzy
msgid ""
"Import loaders which publish immutable module objects can now publish "
"immutable packages in addition to individual modules. (Contributed by Dino "
"Viehland in :issue:`39336`.)"
msgstr ""
"Los cargadores de importación que publican objetos de módulo inmutables "
"ahora pueden publicar paquetes inmutables además de módulos individuales. "
"(Contribución de Dino Viehland en :issue:'39336'.)"

#: ../Doc/whatsnew/3.9.rst:518
#, fuzzy
msgid ""
"Added :func:`importlib.resources.files` function with support for "
"subdirectories in package data, matching backport in ``importlib_resources`` "
"version 1.5. (Contributed by Jason R. Coombs in :issue:`39791`.)"
msgstr ""
"Se agregó la función :func:'importlib.resources.files' con soporte para "
"subdirectorios en los datos del paquete, haciendo coincidir el backport en "
"''importlib_resources'' versión 1.5. (Contribución de Jason R. Coombs en :"
"issue:'39791'.)"

#: ../Doc/whatsnew/3.9.rst:523
#, fuzzy
msgid ""
"Refreshed ``importlib.metadata`` from ``importlib_metadata`` version 1.6.1."
msgstr ""
"Se ha actualizado ''importlib.metadata'' desde ''importlib_metadata'' "
"versión 1.6.1."

#: ../Doc/whatsnew/3.9.rst:526
#, fuzzy
msgid "inspect"
msgstr "Inspeccionar"

#: ../Doc/whatsnew/3.9.rst:528
#, fuzzy
msgid ""
":attr:`inspect.BoundArguments.arguments` is changed from ``OrderedDict`` to "
"regular dict.  (Contributed by Inada Naoki in :issue:`36350` and :issue:"
"`39775`.)"
msgstr ""
":attr:'inspeccionar. BoundArguments.arguments' se cambia de ''OrderedDict'' "
"a dict regular.  (Contribución de Inada Naoki en :issue:'36350' y :"
"issue:'39775'.)"

#: ../Doc/whatsnew/3.9.rst:532
#, fuzzy
msgid "ipaddress"
msgstr "ipaddress"

#: ../Doc/whatsnew/3.9.rst:534
#, fuzzy
msgid ""
":mod:`ipaddress` now supports IPv6 Scoped Addresses (IPv6 address with "
"suffix ``%<scope_id>``)."
msgstr ""
":mod:'ipaddress' ahora admite direcciones con ámbito IPv6 (dirección IPv6 "
"con sufijo ''%<scope_id>'')."

#: ../Doc/whatsnew/3.9.rst:536
#, fuzzy
msgid ""
"Scoped IPv6 addresses can be parsed using :class:`ipaddress.IPv6Address`. If "
"present, scope zone ID is available through the :attr:`~ipaddress."
"IPv6Address.scope_id` attribute. (Contributed by Oleksandr Pavliuk in :issue:"
"`34788`.)"
msgstr ""
"Las direcciones IPv6 con ámbito se pueden analizar mediante :"
"class:'ipaddress. IPv6Dirección'. Si está presente, el ID de zona de ámbito "
"está disponible a través de :attr:'~ipaddress. IPv6Address.scope_id' "
"atributo. (Contribución de Oleksandr Pavliuk en :issue:'34788'.)"

#: ../Doc/whatsnew/3.9.rst:540
#, fuzzy
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. (Contributed by Christian Heimes in :"
"issue:`36384`)."
msgstr ""
"A partir de Python 3.9.5, el módulo :mod:'ipaddress' ya no acepta ceros "
"iniciales en las cadenas de direcciones IPv4. (Contribución de Christian "
"Heimes en :issue:'36384')."

#: ../Doc/whatsnew/3.9.rst:545
#, fuzzy
msgid "math"
msgstr ""
"Nuevas funciones: el módulo :mod:`math` ganó :func:`~math.erf` y :func:"
"`~math.erfc` para la función de error y la función de error complementaria, :"
"func:`~math.expm1` que calcula ``e**x - 1`` con más precisión que usando :"
"func:`~math.exp` y restando 1, :func:`~math.gamma` para la función Gamma, y :"
"func:`~math.lgamma` para el logaritmo natural de la función Gamma. "
"(Contribución de Mark Dickinson y nirinA raseliarison; :issue:`3366`.)"

#: ../Doc/whatsnew/3.9.rst:547
#, fuzzy
msgid ""
"Expanded the :func:`math.gcd` function to handle multiple arguments. "
"Formerly, it only supported two arguments. (Contributed by Serhiy Storchaka "
"in :issue:`39648`.)"
msgstr ""
"Se expandió la función :func:'math.gcd' para manejar varios argumentos. "
"Anteriormente, sólo apoyaba dos argumentos. (Contribución de Serhiy "
"Storchaka en :issue:'39648'.)"

#: ../Doc/whatsnew/3.9.rst:551
#, fuzzy
msgid ""
"Added :func:`math.lcm`: return the least common multiple of specified "
"arguments. (Contributed by Mark Dickinson, Ananthakrishnan and Serhiy "
"Storchaka in :issue:`39479` and :issue:`39648`.)"
msgstr ""
"Añadido :func:'math.lcm': devuelve el múltiplo menos común de los argumentos "
"especificados. (Contribución de Mark Dickinson, Ananthakrishnan y Serhiy "
"Storchaka en :issue:'39479' y :issue:'39648'.)"

#: ../Doc/whatsnew/3.9.rst:555
#, fuzzy
msgid ""
"Added :func:`math.nextafter`: return the next floating-point value after *x* "
"towards *y*. (Contributed by Victor Stinner in :issue:`39288`.)"
msgstr ""
"Añadido :func:'math.nextafter': devuelve el siguiente valor de coma flotante "
"después de *x* hacia *y*. (Contribución de Victor Stinner en :issue:'39288'.)"

#: ../Doc/whatsnew/3.9.rst:559
#, fuzzy
msgid ""
"Added :func:`math.ulp`: return the value of the least significant bit of a "
"float. (Contributed by Victor Stinner in :issue:`39310`.)"
msgstr ""
"Añadido :func:'math.ulp': devuelve el valor del bit menos significativo de "
"un float. (Contribución de Victor Stinner en :issue:'39310'.)"

#: ../Doc/whatsnew/3.9.rst:564
#, fuzzy
msgid "multiprocessing"
msgstr "multiprocesamiento"

#: ../Doc/whatsnew/3.9.rst:566
#, fuzzy
msgid ""
"The :class:`multiprocessing.SimpleQueue` class has a new :meth:"
"`~multiprocessing.SimpleQueue.close` method to explicitly close the queue. "
"(Contributed by Victor Stinner in :issue:`30966`.)"
msgstr ""
"El :class:'multiprocesamiento. La clase SimpleQueue' tiene un nuevo :"
"meth:'~multiprocesamiento. Método SimpleQueue.close' para cerrar "
"explícitamente la cola. (Contribución de Victor Stinner en :issue:'30966'.)"

#: ../Doc/whatsnew/3.9.rst:572
#, fuzzy
msgid "nntplib"
msgstr "nntplib"

#: ../Doc/whatsnew/3.9.rst:574
#, fuzzy
msgid ""
":class:`~nntplib.NNTP` and :class:`~nntplib.NNTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:'~nntplib. NNTP' y :class:'~nntplib. NNTP_SSL' ahora generen un :"
"class:'ValueError' si el tiempo de espera dado para su constructor es cero "
"para evitar la creación de un socket sin bloqueo. (Contribución de Dong-hee "
"Na en :issue:'39259'.)"

#: ../Doc/whatsnew/3.9.rst:579
#, fuzzy
msgid "os"
msgstr "sistema operativo"

#: ../Doc/whatsnew/3.9.rst:581
#, fuzzy
msgid ""
"Added :data:`~os.CLD_KILLED` and :data:`~os.CLD_STOPPED` for :attr:"
"`si_code`. (Contributed by Dong-hee Na in :issue:`38493`.)"
msgstr ""
"Añadido :d ata:'~os. CLD_KILLED' y :d ata:'~os. CLD_STOPPED' para :"
"attr:'si_code'. (Contribución de Dong-hee Na en :issue:'38493'.)"

#: ../Doc/whatsnew/3.9.rst:584
#, fuzzy
msgid ""
"Exposed the Linux-specific :func:`os.pidfd_open` (:issue:`38692`) and :data:"
"`os.P_PIDFD` (:issue:`38713`) for process management with file descriptors."
msgstr ""
"Expuesto el :func:'os.pidfd_open' específico de Linux (:issue:'38692') y el :"
"d ata:'os. P_PIDFD' (:issue:'38713') para la gestión de procesos con "
"descriptores de archivos."

#: ../Doc/whatsnew/3.9.rst:588
#, fuzzy
msgid ""
"The :func:`os.unsetenv` function is now also available on Windows. "
"(Contributed by Victor Stinner in :issue:`39413`.)"
msgstr ""
"La función :func:'os.unsetenv' ahora también está disponible en Windows. "
"(Contribución de Victor Stinner en :issue:'39413'.)"

#: ../Doc/whatsnew/3.9.rst:591
#, fuzzy
msgid ""
"The :func:`os.putenv` and :func:`os.unsetenv` functions are now always "
"available. (Contributed by Victor Stinner in :issue:`39395`.)"
msgstr ""
"Las funciones :func:'os.putenv' y :func:'os.unsetenv' ahora están siempre "
"disponibles. (Contribución de Victor Stinner en :issue:'39395'.)"

#: ../Doc/whatsnew/3.9.rst:595
#, fuzzy
msgid ""
"Added :func:`os.waitstatus_to_exitcode` function: convert a wait status to "
"an exit code. (Contributed by Victor Stinner in :issue:`40094`.)"
msgstr ""
"Añadida la función :func:'os.waitstatus_to_exitcode': convertir un estado de "
"espera en un código de salida. (Contribución de Victor Stinner en :"
"issue:'40094'.)"

#: ../Doc/whatsnew/3.9.rst:600
#, fuzzy
msgid "pathlib"
msgstr "pathlib"

#: ../Doc/whatsnew/3.9.rst:602
#, fuzzy
msgid ""
"Added :meth:`pathlib.Path.readlink()` which acts similarly to :func:`os."
"readlink`. (Contributed by Girts Folkmanis in :issue:`30618`)"
msgstr ""
"Añadido :meth:'pathlib. Path.readlink()' que actúa de manera similar a :"
"func:'os.readlink'. (Contribución de Girts Folkmanis en :issue:'30618')"

#: ../Doc/whatsnew/3.9.rst:607
#, fuzzy
msgid "pdb"
msgstr "pdb"

#: ../Doc/whatsnew/3.9.rst:609
#, fuzzy
msgid ""
"On Windows now :class:`~pdb.Pdb` supports ``~/.pdbrc``. (Contributed by Tim "
"Hopper and Dan Lidral-Porter in :issue:`20523`.)"
msgstr ""
"En Windows ahora :class:'~pdb. Pdb' soporta ''~/.pdbrc''. (Contribución de "
"Tim Hopper y Dan Lidral-Porter en :issue:'20523'.)"

#: ../Doc/whatsnew/3.9.rst:613
#, fuzzy
msgid "poplib"
msgstr "poplib"

#: ../Doc/whatsnew/3.9.rst:615
#, fuzzy
msgid ""
":class:`~poplib.POP3` and :class:`~poplib.POP3_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:'~poplib. POP3' y :class:'~poplib. POP3_SSL' ahora generan un :"
"class:'ValueError' si el tiempo de espera dado para su constructor es cero "
"para evitar la creación de un socket sin bloqueo. (Contribución de Dong-hee "
"Na en :issue:'39259'.)"

#: ../Doc/whatsnew/3.9.rst:620
#, fuzzy
msgid "pprint"
msgstr "pprint"

#: ../Doc/whatsnew/3.9.rst:622
#, fuzzy
msgid ""
":mod:`pprint` can now pretty-print :class:`types.SimpleNamespace`. "
"(Contributed by Carl Bordum Hansen in :issue:`37376`.)"
msgstr ""
":mod:'pprint' ahora puede pretty-print :class:'types. SimpleNamespace'. "
"(Contribución de Carl Bordum Hansen en :issue:'37376'.)"

#: ../Doc/whatsnew/3.9.rst:626
#, fuzzy
msgid "pydoc"
msgstr "pydoc"

#: ../Doc/whatsnew/3.9.rst:628
#, fuzzy
msgid ""
"The documentation string is now shown not only for class, function, method "
"etc, but for any object that has its own ``__doc__`` attribute. (Contributed "
"by Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"La cadena de documentación ahora se muestra no solo para clase, función, "
"método, etc., sino también para cualquier objeto que tenga su propio "
"atributo ''__doc__''. (Contribución de Serhiy Storchaka en :issue:'40257'.)"

#: ../Doc/whatsnew/3.9.rst:633
msgid "random"
msgstr "aleatorio"

#: ../Doc/whatsnew/3.9.rst:635
#, fuzzy
msgid ""
"Added a new :attr:`random.Random.randbytes` method: generate random bytes. "
"(Contributed by Victor Stinner in :issue:`40286`.)"
msgstr ""
"Se ha añadido un nuevo :attr:'random. Método random.randbytes: generar bytes "
"aleatorios. (Contribución de Victor Stinner en :issue:'40286'.)"

#: ../Doc/whatsnew/3.9.rst:639
msgid "signal"
msgstr "señal"

#: ../Doc/whatsnew/3.9.rst:641
#, fuzzy
msgid ""
"Exposed the Linux-specific :func:`signal.pidfd_send_signal` for sending to "
"signals to a process using a file descriptor instead of a pid. (:issue:"
"`38712`)"
msgstr ""
"Expuesto el :func:'signal.pidfd_send_signal' específico de Linux para enviar "
"señales a un proceso utilizando un descriptor de archivo en lugar de un pid. "
"(:issue:'38712')"

#: ../Doc/whatsnew/3.9.rst:645
#, fuzzy
msgid "smtplib"
msgstr "smtplib"

#: ../Doc/whatsnew/3.9.rst:647
#, fuzzy
msgid ""
":class:`~smtplib.SMTP` and :class:`~smtplib.SMTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:'~smtplib. SMTP' y :class:'~smtplib. SMTP_SSL' ahora generan un :"
"class:'ValueError' si el tiempo de espera dado para su constructor es cero "
"para evitar la creación de un socket sin bloqueo. (Contribución de Dong-hee "
"Na en :issue:'39259'.)"

#: ../Doc/whatsnew/3.9.rst:651
#, fuzzy
msgid ""
":class:`~smtplib.LMTP` constructor  now has an optional *timeout* parameter. "
"(Contributed by Dong-hee Na in :issue:`39329`.)"
msgstr ""
":class:'~smtplib. El constructor lmTP ahora tiene un parámetro *timeout* "
"opcional. (Contribución de Dong-hee Na en :issue:'39329'.)"

#: ../Doc/whatsnew/3.9.rst:655
msgid "socket"
msgstr "enchufe"

#: ../Doc/whatsnew/3.9.rst:657
#, fuzzy
msgid ""
"The :mod:`socket` module now exports the :data:`~socket."
"CAN_RAW_JOIN_FILTERS` constant on Linux 4.1 and greater. (Contributed by "
"Stefan Tatschner and Zackery Spytz in :issue:`25780`.)"
msgstr ""
"El módulo :mod:'socket' ahora exporta el :d ata:'~socket. "
"CAN_RAW_JOIN_FILTERS constante en Linux 4.1 y superior. (Contribución de "
"Stefan Tatschner y Zackery Spytz en :issue:'25780'.)"

#: ../Doc/whatsnew/3.9.rst:661
#, fuzzy
msgid ""
"The socket module now supports the :data:`~socket.CAN_J1939` protocol on "
"platforms that support it.  (Contributed by Karl Ding in :issue:`40291`.)"
msgstr ""
"El módulo socket ahora es compatible con el socket :d ata:'~. CAN_J1939' en "
"las plataformas que lo soportan.  (Contribución de Karl Ding en :"
"issue:'40291'.)"

#: ../Doc/whatsnew/3.9.rst:664
#, fuzzy
msgid ""
"The socket module now has the :func:`socket.send_fds` and :func:`socket."
"recv_fds` functions. (Contributed by Joannah Nanjekye, Shinya Okano and "
"Victor Stinner in :issue:`28724`.)"
msgstr ""
"El módulo socket ahora tiene las funciones :func:'socket.send_fds' y :"
"func:'socket.recv_fds'. (Contribución de Joannah Nanjekye, Shinya Okano y "
"Victor Stinner en :issue:'28724'.)"

#: ../Doc/whatsnew/3.9.rst:670
msgid "time"
msgstr "vez"

#: ../Doc/whatsnew/3.9.rst:672
#, fuzzy
msgid ""
"On AIX, :func:`~time.thread_time` is now implemented with "
"``thread_cputime()`` which has nanosecond resolution, rather than "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)`` which has a resolution of 10 ms. "
"(Contributed by Batuhan Taskaya in :issue:`40192`)"
msgstr ""
"En AIX, :func:'~time.thread_time' ahora se implementa con "
"''thread_cputime()'' que tiene resolución de nanosegundos, en lugar de "
"''clock_gettime(CLOCK_THREAD_CPUTIME_ID)'' que tiene una resolución de 10 "
"ms. (Contribución de Batuhan Taskaya en :issue:'40192')"

#: ../Doc/whatsnew/3.9.rst:678
#, fuzzy
msgid "sys"
msgstr "sys"

#: ../Doc/whatsnew/3.9.rst:680
#, fuzzy
msgid ""
"Added a new :attr:`sys.platlibdir` attribute: name of the platform-specific "
"library directory. It is used to build the path of standard library and the "
"paths of installed extension modules. It is equal to ``\"lib\"`` on most "
"platforms.  On Fedora and SuSE, it is equal to ``\"lib64\"`` on 64-bit "
"platforms. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"Se ha agregado un nuevo atributo :attr:'sys.platlibdir': nombre del "
"directorio de biblioteca específico de la plataforma. Se utiliza para "
"construir la ruta de la biblioteca estándar y las rutas de los módulos de "
"extensión instalados. Es igual a ''lib''' en la mayoría de las plataformas.  "
"En Fedora y SuSE, es igual a ''\"lib64\"'' en plataformas de 64 bits. "
"(Contribución de Jan Matějek, Matěj Cepl, Charalampos Stratakis y Victor "
"Stinner en :issue:'1294959'.)"

#: ../Doc/whatsnew/3.9.rst:686
#, fuzzy
msgid ""
"Previously, :attr:`sys.stderr` was block-buffered when non-interactive. Now "
"``stderr`` defaults to always being line-buffered. (Contributed by Jendrik "
"Seipp in :issue:`13601`.)"
msgstr ""
"Anteriormente, :attr:'sys.stderr' se almacenaba en búfer de bloque cuando no "
"era interactivo. Ahora ''stderr'' tiene como valor predeterminado que "
"siempre esté búfer de línea. (Contribución de Jendrik Seipp en :"
"issue:'13601'.)"

#: ../Doc/whatsnew/3.9.rst:691
#, fuzzy
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../Doc/whatsnew/3.9.rst:693
#, fuzzy
msgid ""
"Added :func:`tracemalloc.reset_peak` to set the peak size of traced memory "
"blocks to the current size, to measure the peak of specific pieces of code. "
"(Contributed by Huon Wilson in :issue:`40630`.)"
msgstr ""
"Se agregó :func:'tracemalloc.reset_peak' para establecer el tamaño máximo de "
"los bloques de memoria rastreados en el tamaño actual, para medir el pico de "
"piezas específicas de código. (Contribución de Huon Wilson en :"
"issue:'40630'.)"

#: ../Doc/whatsnew/3.9.rst:698 ../Doc/whatsnew/3.9.rst:1485
#, fuzzy
msgid "typing"
msgstr "Mecanografía"

#: ../Doc/whatsnew/3.9.rst:700
#, fuzzy
msgid ""
":pep:`593` introduced an :data:`typing.Annotated` type to decorate existing "
"types with context-specific metadata and new ``include_extras`` parameter "
"to :func:`typing.get_type_hints` to access the metadata at runtime. "
"(Contributed by Till Varoquaux and Konstantin Kashin.)"
msgstr ""
":p ep:'593' introdujo un :d ata:'escribiendo. Tipo anotado' para decorar los "
"tipos existentes con metadatos específicos del contexto y el nuevo parámetro "
"''include_extras'' a :func:'typing.get_type_hints' para acceder a los "
"metadatos en tiempo de ejecución. (Contribución de Till Varoquaux y "
"Konstantin Kashin.)"

#: ../Doc/whatsnew/3.9.rst:706
#, fuzzy
msgid "unicodedata"
msgstr "unicodedata"

#: ../Doc/whatsnew/3.9.rst:708
#, fuzzy
msgid ""
"The Unicode database has been updated to version 13.0.0. (:issue:`39926`)."
msgstr ""
"La base de datos Unicode se ha actualizado a la versión 13.0.0. (:"
"issue:'39926')."

#: ../Doc/whatsnew/3.9.rst:711
#, fuzzy
msgid "venv"
msgstr "venv"

#: ../Doc/whatsnew/3.9.rst:713
#, fuzzy
msgid ""
"The activation scripts provided by :mod:`venv` now all specify their prompt "
"customization consistently by always using the value specified by "
"``__VENV_PROMPT__``. Previously some scripts unconditionally used "
"``__VENV_PROMPT__``, others only if it happened to be set (which was the "
"default case), and one used ``__VENV_NAME__`` instead. (Contributed by Brett "
"Cannon in :issue:`37663`.)"
msgstr ""
"Los scripts de activación proporcionados por :mod:'venv' ahora especifican "
"su personalización rápida de manera consistente utilizando siempre el valor "
"especificado por ''__VENV_PROMPT__''. Anteriormente, algunos scripts usaban "
"incondicionalmente ''__VENV_PROMPT__'', otros solo si se establecía (que era "
"el caso predeterminado), y uno usaba ''__VENV_NAME__'' en su lugar. "
"(Contribución de Brett Cannon en :issue:'37663'.)"

#: ../Doc/whatsnew/3.9.rst:721
msgid "xml"
msgstr "xml"

#: ../Doc/whatsnew/3.9.rst:723
#, fuzzy
msgid ""
"White space characters within attributes are now preserved when serializing :"
"mod:`xml.etree.ElementTree` to XML file. EOLNs are no longer normalized to "
"\"\\n\". This is the result of discussion about how to interpret section "
"2.11 of XML spec. (Contributed by Mefistotelis in :issue:`39011`.)"
msgstr ""
"Los caracteres de espacio en blanco dentro de los atributos ahora se "
"conservan al serializar :mod:'xml.etree.ElementTree' en un archivo XML. Los "
"EOLN ya no se normalizan a \"\\n\". Este es el resultado de la discusión "
"sobre cómo interpretar la sección 2.11 de la especificación XML. "
"(Contribución de Mefistotelis en :issue:'39011'.)"

#: ../Doc/whatsnew/3.9.rst:731
msgid "Optimizations"
msgstr "Optimizaciones"

#: ../Doc/whatsnew/3.9.rst:733
#, fuzzy
msgid ""
"Optimized the idiom for assignment a temporary variable in comprehensions. "
"Now ``for y in [expr]`` in comprehensions is as fast as a simple assignment "
"``y = expr``.  For example:"
msgstr ""
"Se optimizó el idioma para la asignación de una variable temporal en las "
"comprensiones. Ahora ''para y en [expr]'' en comprensiones es tan rápido "
"como una simple asignación ''y = expr''.  Por ejemplo:"

#: ../Doc/whatsnew/3.9.rst:737
#, fuzzy
msgid "sums = [s for s in [0] for x in data for s in [s + x]]"
msgstr "sumas = [s para s en [0] para x en datos para s en [s + x]]"

#: ../Doc/whatsnew/3.9.rst:739
#, fuzzy
msgid ""
"Unlike the ``:=`` operator this idiom does not leak a variable to the outer "
"scope."
msgstr ""
"A diferencia del operador '':='', este modismo no filtra una variable al "
"ámbito externo."

#: ../Doc/whatsnew/3.9.rst:742
#, fuzzy
msgid "(Contributed by Serhiy Storchaka in :issue:`32856`.)"
msgstr "(Contribución de Serhiy Storchaka en :issue:'32856'.)"

#: ../Doc/whatsnew/3.9.rst:744
#, fuzzy
msgid ""
"Optimized signal handling in multithreaded applications. If a thread "
"different than the main thread gets a signal, the bytecode evaluation loop "
"is no longer interrupted at each bytecode instruction to check for pending "
"signals which cannot be handled. Only the main thread of the main "
"interpreter can handle signals."
msgstr ""
"Manejo de señal optimizado en aplicaciones multiproceso. Si un subproceso "
"diferente al subproceso principal recibe una señal, el bucle de evaluación "
"del código de bytes ya no se interrumpe en cada instrucción de código de "
"bytes para comprobar si hay señales pendientes que no se puedan manejar. "
"Solo el hilo principal del intérprete principal puede manejar señales."

#: ../Doc/whatsnew/3.9.rst:750
#, fuzzy
msgid ""
"Previously, the bytecode evaluation loop was interrupted at each instruction "
"until the main thread handles signals. (Contributed by Victor Stinner in :"
"issue:`40010`.)"
msgstr ""
"Anteriormente, el bucle de evaluación del código de bytes se interrumpía en "
"cada instrucción hasta que el subproceso principal maneja las señales. "
"(Contribución de Victor Stinner en :issue:'40010'.)"

#: ../Doc/whatsnew/3.9.rst:754
#, fuzzy
msgid ""
"Optimized the :mod:`subprocess` module on FreeBSD using ``closefrom()``. "
"(Contributed by Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak and Victor "
"Stinner in :issue:`38061`.)"
msgstr ""
"Optimizado el módulo :mod:'subprocess' en FreeBSD usando ''closefrom()''. "
"(Contribución de Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak y Victor "
"Stinner en :issue:'38061'.)"

#: ../Doc/whatsnew/3.9.rst:758
#, fuzzy
msgid ""
":c:func:`PyLong_FromDouble` is now up to 1.87x faster for values that fit "
"into :c:type:`long`. (Contributed by Sergey Fedoseev in :issue:`37986`.)"
msgstr ""
":c:func:'PyLong_FromDouble' es ahora hasta 1,87 veces más rápido para los "
"valores que encajan en :c:type:'long'. (Contribución de Sergey Fedoseev en :"
"issue:'37986'.)"

#: ../Doc/whatsnew/3.9.rst:762
#, fuzzy
msgid ""
"A number of Python builtins (:class:`range`, :class:`tuple`, :class:`set`, :"
"class:`frozenset`, :class:`list`, :class:`dict`) are now sped up by using :"
"pep:`590` vectorcall protocol. (Contributed by Dong-hee Na, Mark Shannon, "
"Jeroen Demeyer and Petr Viktorin in :issue:`37207`.)"
msgstr ""
"Una serie de builtins de Python (:class:'range', :class:'tuple', :"
"class:'set', :class:'frozenset', :class:'list', :class:'dict') ahora se "
"aceleran mediante el uso del protocolo vectorcall :p ep:'590'. (Contribución "
"de Dong-hee Na, Mark Shannon, Jeroen Demeyer y Petr Viktorin en :"
"issue:'37207'.)"

#: ../Doc/whatsnew/3.9.rst:767
#, fuzzy
msgid ""
"Optimized :func:`~set.difference_update` for the case when the other set is "
"much larger than the base set. (Suggested by Evgeny Kapun with code "
"contributed by Michele Orrù in :issue:`8425`.)"
msgstr ""
"Optimizado :func:'~set.difference_update' para el caso en que el otro "
"conjunto es mucho más grande que el conjunto base. (Sugerido por Evgeny "
"Kapun con código aportado por Michele Orrù en :issue:'8425'.)"

#: ../Doc/whatsnew/3.9.rst:771
#, fuzzy
msgid ""
"Python's small object allocator (``obmalloc.c``) now allows (no more than) "
"one empty arena to remain available for immediate reuse, without returning "
"it to the OS.  This prevents thrashing in simple loops where an arena could "
"be created and destroyed anew on each iteration. (Contributed by Tim Peters "
"in :issue:`37257`.)"
msgstr ""
"El pequeño asignador de objetos de Python (''obmalloc.c'') ahora permite (no "
"más de) que una arena vacía permanezca disponible para su reutilización "
"inmediata, sin devolverla al sistema operativo.  Esto evita la goleada en "
"bucles simples donde se podría crear una arena y destruirla de nuevo en cada "
"iteración. (Contribución de Tim Peters en :issue:'37257'.)"

#: ../Doc/whatsnew/3.9.rst:777
#, fuzzy
msgid ""
":term:`floor division` of float operation now has a better performance. Also "
"the message of :exc:`ZeroDivisionError` for this operation is updated. "
"(Contributed by Dong-hee Na in :issue:`39434`.)"
msgstr ""
":term:'división de piso' de la operación de flotación ahora tiene un mejor "
"rendimiento. También se actualiza el mensaje de :exc:'ZeroDivisionError' "
"para esta operación. (Contribución de Dong-hee Na en :issue:'39434'.)"

#: ../Doc/whatsnew/3.9.rst:781
#, fuzzy, python-format
msgid ""
"Decoding short ASCII strings with UTF-8 and ascii codecs is now about "
"15% faster.  (Contributed by Inada Naoki in :issue:`37348`.)"
msgstr ""
"La decodificación de cadenas ASCII cortas con códecs UTF-8 y ascii ahora es "
"de aproximadamente 15% faster.  (Contribución de Inada Naoki en :"
"issue:'37348'.)"

#: ../Doc/whatsnew/3.9.rst:784
#, fuzzy
msgid ""
"Here's a summary of performance improvements from Python 3.4 through Python "
"3.9:"
msgstr ""
"Aquí hay un resumen de las mejoras de rendimiento de Python 3.4 a Python 3.9:"

#: ../Doc/whatsnew/3.9.rst:831
#, fuzzy
msgid ""
"These results were generated from the variable access benchmark script at: "
"``Tools/scripts/var_access_benchmark.py``. The benchmark script displays "
"timings in nanoseconds.  The benchmarks were measured on an `Intel® Core™ "
"i7-4960HQ processor <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ running the macOS 64-bit builds found at `python.org <https://www."
"python.org/downloads/mac-osx/>`_."
msgstr ""
"Estos resultados se generaron a partir del script de referencia de acceso "
"variable en: ''Tools/scripts/var_access_benchmark.py''. El script de "
"referencia muestra los tiempos en nanosegundos.  Los puntos de referencia se "
"midieron en un procesador 'Intel® Core™ i7-4960HQ <https://ark.intel.com/"
"content/www/us/en/ark/products/76088/intel-core-i7-4960hq-processor-6m-cache-"
"up-to-3-80-ghz.html>'_ que ejecuta las compilaciones de macOS de 64 bits que "
"se encuentran en 'python.org <https://www.python.org/downloads/mac-osx/>'_."

#: ../Doc/whatsnew/3.9.rst:841
msgid "Deprecated"
msgstr "Obsoleto"

#: ../Doc/whatsnew/3.9.rst:843
#, fuzzy
msgid ""
"The distutils ``bdist_msi`` command is now deprecated, use ``bdist_wheel`` "
"(wheel packages) instead. (Contributed by Hugo van Kemenade in :issue:"
"`39586`.)"
msgstr ""
"El comando distutils ''bdist_msi'' ahora está en desuso, use "
"''bdist_wheel'' (paquetes de ruedas) en su lugar. (Contribución de Hugo van "
"Kemenade en :issue:'39586'.)"

#: ../Doc/whatsnew/3.9.rst:847
#, fuzzy
msgid ""
"Currently :func:`math.factorial` accepts :class:`float` instances with non-"
"negative integer values (like ``5.0``).  It raises a :exc:`ValueError` for "
"non-integral and negative floats.  It is now deprecated.  In future Python "
"versions it will raise a :exc:`TypeError` for all floats. (Contributed by "
"Serhiy Storchaka in :issue:`37315`.)"
msgstr ""
"Actualmente :func:'math.factorial' acepta instancias :class:'float' con "
"valores enteros no negativos (como ''5.0'').  Genera un :exc:'ValueError' "
"para flotadores no integrales y negativos.  Ahora está en desuso.  En "
"futuras versiones de Python, levantará un :exc:'TypeError' para todos los "
"floats. (Contribución de Serhiy Storchaka en :issue:'37315'.)"

#: ../Doc/whatsnew/3.9.rst:853
#, fuzzy
msgid ""
"The :mod:`parser` and :mod:`symbol` modules are deprecated and will be "
"removed in future versions of Python. For the majority of use cases, users "
"can leverage the Abstract Syntax Tree (AST) generation and compilation "
"stage, using the :mod:`ast` module."
msgstr ""
"Los módulos :mod:'parser' y :mod:'symbol' están en desuso y se eliminarán en "
"futuras versiones de Python. Para la mayoría de los casos de uso, los "
"usuarios pueden aprovechar la etapa de generación y compilación del árbol de "
"sintaxis abstracta (AST), utilizando el módulo :mod:'ast'."

#: ../Doc/whatsnew/3.9.rst:858
#, fuzzy
msgid ""
"The Public C API functions :c:func:`PyParser_SimpleParseStringFlags`, :c:"
"func:`PyParser_SimpleParseStringFlagsFilename`, :c:func:"
"`PyParser_SimpleParseFileFlags` and :c:func:`PyNode_Compile` are deprecated "
"and will be removed in Python 3.10 together with the old parser."
msgstr ""
"Las funciones de la API de C pública :c:"
"func:'PyParser_SimpleParseStringFlags', :c:"
"func:'PyParser_SimpleParseStringFlagsFilename', :c:"
"func:'PyParser_SimpleParseFileFlags' y :c:func:'PyNode_Compile' están en "
"desuso y se eliminarán en Python 3.10 junto con el analizador antiguo."

#: ../Doc/whatsnew/3.9.rst:863
#, fuzzy
msgid ""
"Using :data:`NotImplemented` in a boolean context has been deprecated, as it "
"is almost exclusively the result of incorrect rich comparator "
"implementations. It will be made a :exc:`TypeError` in a future version of "
"Python. (Contributed by Josh Rosenberg in :issue:`35712`.)"
msgstr ""
"El uso de :d ata:'NotImplemented' en un contexto booleano ha quedado "
"obsoleto, ya que es casi exclusivamente el resultado de implementaciones de "
"comparadores ricas incorrectas. Se hará un :exc:'TypeError' en una futura "
"versión de Python. (Contribución de Josh Rosenberg en :issue:'35712'.)"

#: ../Doc/whatsnew/3.9.rst:869
#, fuzzy
msgid ""
"The :mod:`random` module currently accepts any hashable type as a possible "
"seed value.  Unfortunately, some of those types are not guaranteed to have a "
"deterministic hash value.  After Python 3.9, the module will restrict its "
"seeds to :const:`None`, :class:`int`, :class:`float`, :class:`str`, :class:"
"`bytes`, and :class:`bytearray`."
msgstr ""
"El módulo :mod:'random' actualmente acepta cualquier tipo hash como un "
"posible valor semilla.  Desafortunadamente, no se garantiza que algunos de "
"esos tipos tengan un valor hash determinista.  Después de Python 3.9, el "
"módulo restringirá sus semillas a :const:'None', :class:'int', :"
"class:'float', :class:'str', :class:'bytes', y :class:'bytearray'."

#: ../Doc/whatsnew/3.9.rst:875
#, fuzzy
msgid ""
"Opening the :class:`~gzip.GzipFile` file for writing without specifying the "
"*mode* argument is deprecated.  In future Python versions it will always be "
"opened for reading by default.  Specify the *mode* argument for opening it "
"for writing and silencing a warning. (Contributed by Serhiy Storchaka in :"
"issue:`28286`.)"
msgstr ""
"Abriendo el archivo :class:'~gzip. El archivo de GzipFile para escribir sin "
"especificar el argumento *mode* está en desuso.  En futuras versiones de "
"Python siempre se abrirá para su lectura de forma predeterminada.  "
"Especifique el argumento *mode* para abrirlo para escribir y silenciar una "
"advertencia. (Contribución de Serhiy Storchaka en :issue:'28286'.)"

#: ../Doc/whatsnew/3.9.rst:881
#, fuzzy
msgid ""
"Deprecated the ``split()`` method of :class:`_tkinter.TkappType` in favour "
"of the ``splitlist()`` method which has more consistent and predicable "
"behavior. (Contributed by Serhiy Storchaka in :issue:`38371`.)"
msgstr ""
"Obsoleto el método ''split()'' de :class:'_tkinter. TkappType' a favor del "
"método ''splitlist()'' que tiene un comportamiento más consistente y "
"predecible. (Contribución de Serhiy Storchaka en :issue:'38371'.)"

#: ../Doc/whatsnew/3.9.rst:886
#, fuzzy
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov and Kyle Stanley in :issue:`34790`.)"
msgstr ""
"El paso explícito de objetos de cortarina a :func:'asyncio.wait' ha quedado "
"obsoleto y se eliminará en la versión 3.11. (Contribución de Yury Selivanov "
"y Kyle Stanley en :issue:'34790'.)"

#: ../Doc/whatsnew/3.9.rst:890
#, fuzzy
msgid ""
"binhex4 and hexbin4 standards are now deprecated. The :mod:`binhex` module "
"and the following :mod:`binascii` functions are now deprecated:"
msgstr ""
"Los estándares binhex4 y hexbin4 ahora están en desuso. El módulo :"
"mod:'binhex' y las siguientes funciones :mod:'binascii' están ahora en "
"desuso:"

#: ../Doc/whatsnew/3.9.rst:893
#, fuzzy
msgid ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"
msgstr ":func:'~binascii.b2a_hqx', :func:'~binascii.a2b_hqx'"

#: ../Doc/whatsnew/3.9.rst:894
#, fuzzy
msgid ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"
msgstr ":func:'~binascii.rlecode_hqx', :func:'~binascii.rledecode_hqx'"

#: ../Doc/whatsnew/3.9.rst:896
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`39353`.)"
msgstr "(Contribución de Victor Stinner en :issue:'39353'.)"

#: ../Doc/whatsnew/3.9.rst:898
#, fuzzy
msgid ""
":mod:`ast` classes ``slice``, ``Index`` and ``ExtSlice`` are considered "
"deprecated and will be removed in future Python versions.  ``value`` itself "
"should be used instead of ``Index(value)``.  ``Tuple(slices, Load())`` "
"should be used instead of ``ExtSlice(slices)``. (Contributed by Serhiy "
"Storchaka in :issue:`34822`.)"
msgstr ""
"Las clases :mod:'ast' ''slice'', ''Index'' y ''ExtSlice'' se consideran "
"obsoletas y se eliminarán en futuras versiones de Python.  ''valor'' en sí "
"mismo debe usarse en lugar de ''Índice(valor)''.  ''Tuple(slices, Load())'' "
"debe usarse en lugar de ''ExtSlice(slices)''. (Contribución de Serhiy "
"Storchaka en :issue:'34822'.)"

#: ../Doc/whatsnew/3.9.rst:904
#, fuzzy
msgid ""
":mod:`ast` classes ``Suite``, ``Param``, ``AugLoad`` and ``AugStore`` are "
"considered deprecated and will be removed in future Python versions. They "
"were not generated by the parser and not accepted by the code generator in "
"Python 3. (Contributed by Batuhan Taskaya in :issue:`39639` and :issue:"
"`39969` and Serhiy Storchaka in :issue:`39988`.)"
msgstr ""
":mod:'ast' clases ''Suite'', ''Param'', ''AugLoad'' y ''AugStore'' se "
"consideran obsoletas y se eliminarán en futuras versiones de Python. No "
"fueron generados por el analizador y no aceptados por el generador de código "
"en Python 3. (Contribución de Batuhan Taskaya en :issue:'39639' y :"
"issue:'39969' y Serhiy Storchaka en :issue:'39988'.)"

#: ../Doc/whatsnew/3.9.rst:911
#, fuzzy
msgid ""
"The :c:func:`PyEval_InitThreads` and :c:func:`PyEval_ThreadsInitialized` "
"functions are now deprecated and will be removed in Python 3.11. Calling :c:"
"func:`PyEval_InitThreads` now does nothing. The :term:`GIL` is initialized "
"by :c:func:`Py_Initialize()` since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`39877`.)"
msgstr ""
"Las funciones :c:func:'PyEval_InitThreads' y :c:"
"func:'PyEval_ThreadsInitialized' ahora están en desuso y se eliminarán en "
"Python 3.11. Llamar a :c:func:'PyEval_InitThreads' ahora no hace nada. El :"
"término:'GIL' se inicializa por :c:func:'Py_Initialize()' desde Python 3.7. "
"(Contribución de Victor Stinner en :issue:'39877'.)"

#: ../Doc/whatsnew/3.9.rst:917
#, fuzzy
msgid ""
"Passing ``None`` as the first argument to the :func:`shlex.split` function "
"has been deprecated.  (Contributed by Zackery Spytz in :issue:`33262`.)"
msgstr ""
"Pasar ''Ninguno'' como primer argumento a la función :func:'shlex.split' ha "
"quedado obsoleto.  (Contribución de Zackery Spytz en :issue:'33262'.)"

#: ../Doc/whatsnew/3.9.rst:920
#, fuzzy
msgid ""
":func:`smtpd.MailmanProxy` is now deprecated as it is unusable without an "
"external module, ``mailman``.  (Contributed by Samuel Colvin in :issue:"
"`35800`.)"
msgstr ""
":func:'smtpd. MailmanProxy' ahora está en desuso ya que es inutilizable sin "
"un módulo externo, ''mailman''.  (Contribución de Samuel Colvin en :"
"issue:'35800'.)"

#: ../Doc/whatsnew/3.9.rst:923
#, fuzzy
msgid ""
"The :mod:`lib2to3` module now emits a :exc:`PendingDeprecationWarning`. "
"Python 3.9 switched to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_. (Contributed by Carl Meyer in :issue:`40360`.)"
msgstr ""
"El módulo :mod:'lib2to3' ahora emite un :exc:'PendingDeprecationWarning'. "
"Python 3.9 cambió a un analizador PEG (consulte :p ep:'617'), y Python 3.10 "
"puede incluir una nueva sintaxis de lenguaje que no es analizable por el "
"analizador LL(1) de lib2to3. El módulo ''lib2to3'' puede eliminarse de la "
"biblioteca estándar en una futura versión de Python. Considere alternativas "
"de terceros como 'LibCST'_ o 'parso'_. (Contribución de Carl Meyer en :"
"issue:'40360'.)"

#: ../Doc/whatsnew/3.9.rst:931
#, fuzzy
msgid ""
"The *random* parameter of :func:`random.shuffle` has been deprecated. "
"(Contributed by Raymond Hettinger in :issue:`40465`)"
msgstr ""
"El parámetro *random* de :func:'random.shuffle' ha quedado obsoleto. "
"(Contribución de Raymond Hettinger en :issue:'40465')"

#: ../Doc/whatsnew/3.9.rst:940 ../Doc/whatsnew/3.9.rst:1399
msgid "Removed"
msgstr "Removido"

#: ../Doc/whatsnew/3.9.rst:942
#, fuzzy
msgid ""
"The erroneous version at :data:`unittest.mock.__version__` has been removed."
msgstr ""
"Se ha eliminado la versión errónea en :d ata:'unittest.mock.__version__'."

#: ../Doc/whatsnew/3.9.rst:944
#, fuzzy
msgid ""
":class:`nntplib.NNTP`: ``xpath()`` and ``xgtitle()`` methods have been "
"removed. These methods are deprecated since Python 3.3. Generally, these "
"extensions are not supported or not enabled by NNTP server administrators. "
"For ``xgtitle()``, please use :meth:`nntplib.NNTP.descriptions` or :meth:"
"`nntplib.NNTP.description` instead. (Contributed by Dong-hee Na in :issue:"
"`39366`.)"
msgstr ""
":class:'nntplib. NNTP': se han eliminado los métodos ''xpath()'' y "
"''xgtitle()''. Estos métodos están en desuso desde Python 3.3. Generalmente, "
"estas extensiones no son compatibles o no están habilitadas por los "
"administradores del servidor NNTP. Para ''xgtitle()'', por favor use :"
"meth:'nntplib. NNTP.descriptions' o :meth:'nntplib. NNTP.description' en su "
"lugar. (Contribución de Dong-hee Na en :issue:'39366'.)"

#: ../Doc/whatsnew/3.9.rst:951
#, fuzzy
msgid ""
":class:`array.array`: ``tostring()`` and ``fromstring()`` methods have been "
"removed. They were aliases to ``tobytes()`` and ``frombytes()``, deprecated "
"since Python 3.2. (Contributed by Victor Stinner in :issue:`38916`.)"
msgstr ""
":class:'array.array': se han eliminado los métodos ''tostring()'' y "
"''fromstring()''. Eran alias de ''tobytes()'' y ''frombytes()'', obsoletos "
"desde Python 3.2. (Contribución de Victor Stinner en :issue:'38916'.)"

#: ../Doc/whatsnew/3.9.rst:956
#, fuzzy
msgid ""
"The undocumented ``sys.callstats()`` function has been removed. Since Python "
"3.7, it was deprecated and always returned :const:`None`. It required a "
"special build option ``CALL_PROFILE`` which was already removed in Python "
"3.7. (Contributed by Victor Stinner in :issue:`37414`.)"
msgstr ""
"Se ha eliminado la función ''sys.callstats()'' no documentada. Desde Python "
"3.7, quedó en desuso y siempre devolvió :const:'Ninguno'. Requería una "
"opción de compilación especial ''CALL_PROFILE'' que ya se eliminó en Python "
"3.7. (Contribución de Victor Stinner en :issue:'37414'.)"

#: ../Doc/whatsnew/3.9.rst:961
#, fuzzy
msgid ""
"The ``sys.getcheckinterval()`` and ``sys.setcheckinterval()`` functions have "
"been removed. They were deprecated since Python 3.2. Use :func:`sys."
"getswitchinterval` and :func:`sys.setswitchinterval` instead. (Contributed "
"by Victor Stinner in :issue:`37392`.)"
msgstr ""
"Se han eliminado las funciones ''sys.getcheckinterval()'' y ''sys."
"setcheckinterval()''. Estaban en desuso desde Python 3.2. Utilice :func:'sys."
"getswitchinterval' y :func:'sys.setswitchinterval' en su lugar. "
"(Contribución de Victor Stinner en :issue:'37392'.)"

#: ../Doc/whatsnew/3.9.rst:966
#, fuzzy
msgid ""
"The C function ``PyImport_Cleanup()`` has been removed. It was documented "
"as: \"Empty the module table.  For internal use only.\" (Contributed by "
"Victor Stinner in :issue:`36710`.)"
msgstr ""
"Se ha eliminado la función C ''PyImport_Cleanup()''. Se documentó como: "
"\"Vaciar la tabla de módulos.  Solo para uso interno\". (Contribución de "
"Victor Stinner en :issue:'36710'.)"

#: ../Doc/whatsnew/3.9.rst:970
#, fuzzy
msgid ""
"``_dummy_thread`` and ``dummy_threading`` modules have been removed. These "
"modules were deprecated since Python 3.7 which requires threading support. "
"(Contributed by Victor Stinner in :issue:`37312`.)"
msgstr ""
"Se han eliminado los módulos ''_dummy_thread'' y ''dummy_threading''. Estos "
"módulos quedaron obsoletos desde Python 3.7, que requiere soporte de "
"subprocesos. (Contribución de Victor Stinner en :issue:'37312'.)"

#: ../Doc/whatsnew/3.9.rst:974
#, fuzzy
msgid ""
"``aifc.openfp()`` alias to ``aifc.open()``, ``sunau.openfp()`` alias to "
"``sunau.open()``, and ``wave.openfp()`` alias to :func:`wave.open()` have "
"been removed. They were deprecated since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`37320`.)"
msgstr ""
"Se han eliminado el alias ''aifc.openfp()'' a ''aifc.open()'', ''sunau."
"openfp()'' alias a ''sunau.open()'', y el alias ''wave.openfp()'' a :"
"func:'wave.open()'. Estaban en desuso desde Python 3.7. (Contribución de "
"Victor Stinner en :issue:'37320'.)"

#: ../Doc/whatsnew/3.9.rst:979
#, fuzzy
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been removed. It was deprecated since Python 3.8. Use :meth:`~threading."
"Thread.is_alive()` instead. (Contributed by Dong-hee Na in :issue:`37804`.)"
msgstr ""
"El :meth:'~threading. Thread.isAlive()' método de :class:'threading. Se ha "
"eliminado Thread'. Estaba en desuso desde Python 3.8. Usa :meth:'~threading. "
"Thread.is_alive()' en su lugar. (Contribución de Dong-hee Na en :"
"issue:'37804'.)"

#: ../Doc/whatsnew/3.9.rst:984
#, fuzzy
msgid ""
"Methods ``getchildren()`` and ``getiterator()`` of classes :class:`~xml."
"etree.ElementTree.ElementTree` and :class:`~xml.etree.ElementTree.Element` "
"in the :mod:`~xml.etree.ElementTree` module have been removed.  They were "
"deprecated in Python 3.2. Use ``iter(x)`` or ``list(x)`` instead of ``x."
"getchildren()`` and ``x.iter()`` or ``list(x.iter())`` instead of ``x."
"getiterator()``. (Contributed by Serhiy Storchaka in :issue:`36543`.)"
msgstr ""
"Se han eliminado los métodos ''getchildren()'' y ''getiterator()'' de las "
"clases :class:'~xml.etree.ElementTree.ElementTree' y :class:'~xml.etree."
"ElementTree.Element' en el módulo :mod:'~xml.etree.ElementTree'.  Estaban en "
"desuso en Python 3.2. Use ''iter(x)'' o ''list(x)'' en lugar de ''x."
"getchildren()'' y ''x.iter()'' o ''list(x.iter())'' en lugar de ''x."
"getiterator()''. (Contribución de Serhiy Storchaka en :issue:'36543'.)"

#: ../Doc/whatsnew/3.9.rst:992
#, fuzzy
msgid ""
"The old :mod:`plistlib` API has been removed, it was deprecated since Python "
"3.4. Use the :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump`, and :func:`~plistlib.dumps` functions. Additionally, the "
"*use_builtin_types* parameter was removed, standard :class:`bytes` objects "
"are always used instead. (Contributed by Jon Janzen in :issue:`36409`.)"
msgstr ""
"La antigua API :mod:'plistlib' ha sido eliminada, estaba en desuso desde "
"Python 3.4. Utilice las funciones :func:'~plistlib.load', :func:'~plistlib."
"loads', :func:'~plistlib.dump' y :func:'~plistlib.dumps' Además, se eliminó "
"el parámetro *use_builtin_types*, siempre se utilizan objetos estándar :"
"class:'bytes' en su lugar. (Contribución de Jon Janzen en :issue:'36409'.)"

#: ../Doc/whatsnew/3.9.rst:998
#, fuzzy
msgid ""
"The C function ``PyGen_NeedsFinalizing`` has been removed. It was not "
"documented, tested, or used anywhere within CPython after the implementation "
"of :pep:`442`. Patch by Joannah Nanjekye. (Contributed by Joannah Nanjekye "
"in :issue:`15088`)"
msgstr ""
"Se ha eliminado la función C ''PyGen_NeedsFinalizing''. No fue documentado, "
"probado o utilizado en ningún lugar dentro de CPython después de la "
"implementación de :p ep: '442'. Parche por Joannah Nanjekye. (Contribución "
"de Joannah Nanjekye en :issue:'15088')"

#: ../Doc/whatsnew/3.9.rst:1003
#, fuzzy
msgid ""
"``base64.encodestring()`` and ``base64.decodestring()``, aliases deprecated "
"since Python 3.1, have been removed: use :func:`base64.encodebytes` and :"
"func:`base64.decodebytes` instead. (Contributed by Victor Stinner in :issue:"
"`39351`.)"
msgstr ""
"''base64.encodestring()'' y ''base64.decodestring()'', alias obsoletos desde "
"Python 3.1, se han eliminado: use :func:'base64.encodebytes' y :func:'base64."
"decodebytes' en su lugar. (Contribución de Victor Stinner en :issue:'39351'.)"

#: ../Doc/whatsnew/3.9.rst:1008
#, fuzzy
msgid ""
"``fractions.gcd()`` function has been removed, it was deprecated since "
"Python 3.5 (:issue:`22486`): use :func:`math.gcd` instead. (Contributed by "
"Victor Stinner in :issue:`39350`.)"
msgstr ""
"La función ''fractions.gcd()'' se ha eliminado, estaba en desuso desde "
"Python 3.5 (:issue:'22486'): use :func:'math.gcd' en su lugar. (Contribución "
"de Victor Stinner en :issue:'39350'.)"

#: ../Doc/whatsnew/3.9.rst:1012
#, fuzzy
msgid ""
"The *buffering* parameter of :class:`bz2.BZ2File` has been removed. Since "
"Python 3.0, it was ignored and using it emitted a :exc:`DeprecationWarning`. "
"Pass an open file object to control how the file is opened. (Contributed by "
"Victor Stinner in :issue:`39357`.)"
msgstr ""
"El parámetro *buffering* de :class:'bz2. BZ2File' ha sido eliminado. Desde "
"Python 3.0, fue ignorado y su uso emitió un :exc:'DeprecationWarning'. Pase "
"un objeto de archivo abierto para controlar cómo se abre el archivo. "
"(Contribución de Victor Stinner en :issue:'39357'.)"

#: ../Doc/whatsnew/3.9.rst:1017
#, fuzzy
msgid ""
"The *encoding* parameter of :func:`json.loads` has been removed. As of "
"Python 3.1, it was deprecated and ignored; using it has emitted a :exc:"
"`DeprecationWarning` since Python 3.8. (Contributed by Inada Naoki in :issue:"
"`39377`)"
msgstr ""
"Se ha eliminado el parámetro *encoding* de :func:'json.loads'. A partir de "
"Python 3.1, quedó en desuso e ignorado; usándolo ha emitido un :"
"exc:'DeprecationWarning' desde Python 3.8. (Contribución de Inada Naoki en :"
"issue:'39377')"

#: ../Doc/whatsnew/3.9.rst:1022
#, fuzzy
msgid ""
"``with (await asyncio.lock):`` and ``with (yield from asyncio.lock):`` "
"statements are not longer supported, use ``async with lock`` instead.  The "
"same is correct for ``asyncio.Condition`` and ``asyncio.Semaphore``. "
"(Contributed by Andrew Svetlov in :issue:`34793`.)"
msgstr ""
"Las instrucciones ''with (await asyncio.lock):'' y ''with (yield from "
"asyncio.lock):'' ya no son compatibles, use ''async with lock'' en su "
"lugar.  Lo mismo es correcto para ''asyncio. Condición'' y ''asyncio. "
"Semáforo''. (Contribución de Andrew Svetlov en :issue:'34793'.)"

#: ../Doc/whatsnew/3.9.rst:1027
#, fuzzy
msgid ""
"The :func:`sys.getcounts` function, the ``-X showalloccount`` command line "
"option and the ``show_alloc_count`` field of the C structure :c:type:"
"`PyConfig` have been removed. They required a special Python build by "
"defining ``COUNT_ALLOCS`` macro. (Contributed by Victor Stinner in :issue:"
"`39489`.)"
msgstr ""
"Se han eliminado la función :func:'sys.getcounts', la opción de línea de "
"comandos ''-X showalloccount'' y el campo ''show_alloc_count'' de la "
"estructura C :c:type:'PyConfig'. Requerían una compilación especial de "
"Python definiendo la macro ''COUNT_ALLOCS''. (Contribución de Victor Stinner "
"en :issue:'39489'.)"

#: ../Doc/whatsnew/3.9.rst:1033
#, fuzzy
msgid ""
"The ``_field_types`` attribute of the :class:`typing.NamedTuple` class has "
"been removed.  It was deprecated since Python 3.8.  Use the "
"``__annotations__`` attribute instead. (Contributed by Serhiy Storchaka in :"
"issue:`40182`.)"
msgstr ""
"El atributo ''_field_types'' de la clase :class:'typing. Se ha eliminado la "
"clase NamedTuple'.  Estaba en desuso desde Python 3.8.  En su lugar, use el "
"atributo ''__annotations__''. (Contribución de Serhiy Storchaka en :"
"issue:'40182'.)"

#: ../Doc/whatsnew/3.9.rst:1038
#, fuzzy
msgid ""
"The :meth:`symtable.SymbolTable.has_exec` method has been removed. It was "
"deprecated since 2006, and only returning ``False`` when it's called. "
"(Contributed by Batuhan Taskaya in :issue:`40208`)"
msgstr ""
"El :meth:'symtable. SymbolTable.has_exec' método de la SymbolTable.has_exec "
"ha sido eliminado. Estaba en desuso desde 2006, y solo regresaba ''Falso'' "
"cuando se llama. (Contribución de Batuhan Taskaya en :issue:'40208')"

#: ../Doc/whatsnew/3.9.rst:1042
#, fuzzy
msgid ""
"The :meth:`asyncio.Task.current_task` and :meth:`asyncio.Task.all_tasks` "
"have been removed. They were deprecated since Python 3.7 and you can use :"
"func:`asyncio.current_task` and :func:`asyncio.all_tasks` instead. "
"(Contributed by Rémi Lapeyre in :issue:`40967`)"
msgstr ""
"El :meth:'asyncio. Task.current_task' y :meth:'asyncio. Task.all_tasks' han "
"sido eliminados. Estaban en desuso desde Python 3.7 y puedes usar :"
"func:'asyncio.current_task' y :func:'asyncio.all_tasks' en su lugar. "
"(Contribución de Rémi Lapeyre en :issue:'40967')"

#: ../Doc/whatsnew/3.9.rst:1047
#, fuzzy
msgid ""
"The ``unescape()`` method in the :class:`html.parser.HTMLParser` class has "
"been removed (it was deprecated since Python 3.4).  :func:`html.unescape` "
"should be used for converting character references to the corresponding "
"unicode characters."
msgstr ""
"El método ''unescape()'' en la clase :class:'html.parser.HTMLParser' se ha "
"eliminado (estaba en desuso desde Python 3.4).  :func:'html.unescape' debe "
"utilizarse para convertir referencias de caracteres a los caracteres unicode "
"correspondientes."

#: ../Doc/whatsnew/3.9.rst:1054 ../Doc/whatsnew/3.9.rst:1321
#, fuzzy
msgid "Porting to Python 3.9"
msgstr "Migración a Python 3.9"

#: ../Doc/whatsnew/3.9.rst:1056
#, fuzzy
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"En esta sección se enumeran los cambios descritos anteriormente y otras "
"correcciones de errores que pueden requerir cambios en el código."

#: ../Doc/whatsnew/3.9.rst:1061
#, fuzzy
msgid "Changes in the Python API"
msgstr "Cambios en la API de Python"

#: ../Doc/whatsnew/3.9.rst:1063
#, fuzzy
msgid ""
":func:`__import__` and :func:`importlib.util.resolve_name` now raise :exc:"
"`ImportError` where it previously raised :exc:`ValueError`. Callers catching "
"the specific exception type and supporting both Python 3.9 and earlier "
"versions will need to catch both using ``except (ImportError, ValueError):``."
msgstr ""
":func:'__import__' y :func:'importlib.util.resolve_name' ahora generan :"
"exc:'ImportError' donde anteriormente se generaba :exc:'ValueError'. Las "
"personas que llamen al que detecten el tipo de excepción específico y "
"admitan python 3.9 y versiones anteriores deberán capturar ambas usando "
"''except (ImportError, ValueError):''."

#: ../Doc/whatsnew/3.9.rst:1068
#, fuzzy
msgid ""
"The :mod:`venv` activation scripts no longer special-case when "
"``__VENV_PROMPT__`` is set to ``\"\"``."
msgstr ""
"Los scripts de activación :mod:'venv' ya no son un caso especial cuando "
"''__VENV_PROMPT__'' se establece en ''\"'''."

#: ../Doc/whatsnew/3.9.rst:1071
#, fuzzy
msgid ""
"The :meth:`select.epoll.unregister` method no longer ignores the :data:"
"`~errno.EBADF` error. (Contributed by Victor Stinner in :issue:`39239`.)"
msgstr ""
"El método :meth:'select.epoll.unregister' ya no ignora el :d ata:'~errno. "
"Error de EBADF. (Contribución de Victor Stinner en :issue:'39239'.)"

#: ../Doc/whatsnew/3.9.rst:1075
#, fuzzy
msgid ""
"The *compresslevel* parameter of :class:`bz2.BZ2File` became keyword-only, "
"since the *buffering* parameter has been removed. (Contributed by Victor "
"Stinner in :issue:`39357`.)"
msgstr ""
"El parámetro *compresslevel* de :class:'bz2. BZ2File' se convirtió en solo "
"palabra clave, ya que se ha eliminado el parámetro *buffering*. "
"(Contribución de Victor Stinner en :issue:'39357'.)"

#: ../Doc/whatsnew/3.9.rst:1079
#, fuzzy
msgid ""
"Simplified AST for subscription. Simple indices will be represented by their "
"value, extended slices will be represented as tuples. ``Index(value)`` will "
"return a ``value`` itself, ``ExtSlice(slices)`` will return ``Tuple(slices, "
"Load())``. (Contributed by Serhiy Storchaka in :issue:`34822`.)"
msgstr ""
"AST simplificado para la suscripción. Los índices simples se representarán "
"por su valor, las divisiones extendidas se representarán como tuplas. "
"''Index(value)'' devolverá un ''valor'' en sí mismo, ''ExtSlice(slices)'' "
"devolverá ''Tuple(slices, Load())''. (Contribución de Serhiy Storchaka en :"
"issue:'34822'.)"

#: ../Doc/whatsnew/3.9.rst:1085
#, fuzzy
msgid ""
"The :mod:`importlib` module now ignores the :envvar:`PYTHONCASEOK` "
"environment variable when the :option:`-E` or :option:`-I` command line "
"options are being used."
msgstr ""
"El módulo :mod:'importlib' ahora ignora la variable de entorno :"
"envvar:'PYTHONCASEOK' cuando se utilizan las opciones de línea de comandos :"
"option:'-E' o :option:'-I'."

#: ../Doc/whatsnew/3.9.rst:1089
#, fuzzy
msgid ""
"The *encoding* parameter has been added to the classes :class:`ftplib.FTP` "
"and :class:`ftplib.FTP_TLS` as a keyword-only parameter, and the default "
"encoding is changed from Latin-1 to UTF-8 to follow :rfc:`2640`."
msgstr ""
"El parámetro *encoding* se ha añadido a las clases :class:'ftplib. FTP' y :"
"class:'ftplib. FTP_TLS' como parámetro de solo palabra clave, y la "
"codificación predeterminada se cambia de Latin-1 a UTF-8 para seguir :"
"rfc:'2640'."

#: ../Doc/whatsnew/3.9.rst:1093
#, fuzzy
msgid ""
":meth:`asyncio.loop.shutdown_default_executor` has been added to :class:"
"`~asyncio.AbstractEventLoop`, meaning alternative event loops that inherit "
"from it should have this method defined. (Contributed by Kyle Stanley in :"
"issue:`34037`.)"
msgstr ""
":meth:'asyncio.loop.shutdown_default_executor' se ha añadido a :"
"class:'~asyncio. AbstractEventLoop', es decir, los bucles de eventos "
"alternativos que heredan de él deben tener este método definido. "
"(Contribución de Kyle Stanley en :issue:'34037'.)"

#: ../Doc/whatsnew/3.9.rst:1098
#, fuzzy
msgid ""
"The constant values of future flags in the :mod:`__future__` module is "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
"Los valores constantes de las banderas futuras en el módulo :"
"mod:'__future__' se actualizan para evitar colisiones con las banderas del "
"compilador. Anteriormente, \"PyCF_ALLOW_TOP_LEVEL_AWAIT\" chocaba con "
"\"CO_FUTURE_DIVISION\". (Contribución de Batuhan Taskaya en :issue:'39562')"

#: ../Doc/whatsnew/3.9.rst:1103
#, fuzzy
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of ``Py_UNICODE``. "
"This change doesn't affect to its behavior because ``Py_UNICODE`` is alias "
"of ``wchar_t`` since Python 3.3. (Contributed by Inada Naoki in :issue:"
"`34538`.)"
msgstr ""
"''array('u')'' ahora usa ''wchar_t'' como tipo C en lugar de ''Py_UNICODE''. "
"Este cambio no afecta a su comportamiento porque ''Py_UNICODE'' es alias de "
"''wchar_t'' desde Python 3.3. (Contribución de Inada Naoki en :"
"issue:'34538'.)"

#: ../Doc/whatsnew/3.9.rst:1108
#, fuzzy
msgid ""
"The :func:`logging.getLogger` API now returns the root logger when passed "
"the name ``'root'``, whereas previously it returned a non-root logger named "
"``'root'``. This could affect cases where user code explicitly wants a non-"
"root logger named ``'root'``, or instantiates a logger using ``logging."
"getLogger(__name__)`` in some top-level module called ``'root.py'``. "
"(Contributed by Vinay Sajip in :issue:`37742`.)"
msgstr ""
"La API :func:'logging.getLogger' ahora devuelve el registrador raíz cuando "
"se le pasa el nombre '''root''', mientras que anteriormente devolvía un "
"registrador no root llamado '''root'''. Esto podría afectar a los casos en "
"que el código de usuario desea explícitamente un registrador no root llamado "
"'''root''', o crea una instancia de un registrador usando ''logging."
"getLogger(__name__)'' en algún módulo de nivel superior llamado '''root."
"py'''. (Contribución de Vinay Sajip en :issue:'37742'.)"

#: ../Doc/whatsnew/3.9.rst:1115
#, fuzzy
msgid ""
"Division handling of :class:`~pathlib.PurePath` now returns "
"``NotImplemented`` instead of raising a :exc:`TypeError` when passed "
"something other than an instance of ``str`` or :class:`~pathlib.PurePath`.  "
"This allows creating compatible classes that don't inherit from those "
"mentioned types. (Contributed by Roger Aiudi in :issue:`34775`)."
msgstr ""
"Manejo de división de :class:'~pathlib. PurePath' ahora devuelve "
"''NotImplemented'' en lugar de generar un :exc:'TypeError' cuando se pasa "
"algo que no sea una instancia de ''str'' o :class:'~pathlib. PurePath'.  "
"Esto permite crear clases compatibles que no heredan de los tipos "
"mencionados. (Contribución de Roger Aiudi en :issue:'34775')."

#: ../Doc/whatsnew/3.9.rst:1121
#, fuzzy
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notatation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros. (Contributed by Christian Heimes in :issue:`36384`)."
msgstr ""
"A partir de Python 3.9.5, el módulo :mod:'ipaddress' ya no acepta ceros "
"iniciales en las cadenas de direcciones IPv4. Los ceros iniciales son "
"ambiguos e interpretados como notación octal por algunas bibliotecas. Por "
"ejemplo, la función heredada :func:'socket.inet_aton' trata los ceros "
"iniciales como notación octal. La implementación glibc de modern :"
"func:'~socket.inet_pton' no acepta ningún cero inicial. (Contribución de "
"Christian Heimes en :issue:'36384')."

#: ../Doc/whatsnew/3.9.rst:1129
#, fuzzy
msgid ""
":func:`codecs.lookup` now normalizes the encoding name the same way as :func:"
"`encodings.normalize_encoding`, except that :func:`codecs.lookup` also "
"converts the name to lower case. For example, ``\"latex+latin1\"`` encoding "
"name is now normalized to ``\"latex_latin1\"``. (Contributed by Jordon Xu "
"in :issue:`37751`.)"
msgstr ""
":func:'codecs.lookup' ahora normaliza el nombre de codificación de la misma "
"manera que :func:'encodings.normalize_encoding', excepto que :func:'codecs."
"lookup' también convierte el nombre a minúsculas. Por ejemplo, el nombre de "
"codificación ''\"latex+latin1\"'' ahora está normalizado a "
"''\"latex_latin1\"''. (Contribución de Jordon Xu en :issue:'37751'.)"

#: ../Doc/whatsnew/3.9.rst:1137
msgid "Changes in the C API"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.9.rst:1139
#, fuzzy
msgid ""
"Instances of :ref:`heap-allocated types <heap-types>` (such as those created "
"with :c:func:`PyType_FromSpec` and similar APIs) hold a reference to their "
"type object since Python 3.8. As indicated in the \"Changes in the C API\" "
"of Python 3.8, for the vast majority of cases, there should be no side "
"effect but for types that have a custom :c:member:`~PyTypeObject."
"tp_traverse` function, ensure that all custom ``tp_traverse`` functions of "
"heap-allocated types visit the object's type."
msgstr ""
"Las instancias de :ref:'heap-assign <heap-types>types' (como las creadas "
"con :c:func:'PyType_FromSpec' y API similares) contienen una referencia a su "
"objeto de tipo desde Python 3.8. Como se indica en los \"Cambios en la API "
"de C\" de Python 3.8, para la gran mayoría de los casos, no debería haber "
"ningún efecto secundario, pero para los tipos que tienen una función "
"personalizada :c:member:'~PyTypeObject.tp_traverse'', asegúrese de que todas "
"las funciones personalizadas ''tp_traverse'' de los tipos asignados al "
"montón visiten el tipo del objeto.</heap-types>"

#: ../Doc/whatsnew/3.9.rst:1160
#, fuzzy
msgid ""
"If your traverse function delegates to ``tp_traverse`` of its base class (or "
"another type), ensure that ``Py_TYPE(self)`` is visited only once. Note that "
"only :ref:`heap type <heap-types>` are expected to visit the type in "
"``tp_traverse``."
msgstr ""
"Si la función transversal delega en ''tp_traverse'' de su clase base (u otro "
"tipo), asegúrese de que ''Py_TYPE(self)'' se visita solo una vez. Tenga en "
"cuenta que solo se espera que :ref:'heap <heap-types>type' visite el tipo en "
"''tp_traverse''.</heap-types>"

#: ../Doc/whatsnew/3.9.rst:1165
#, fuzzy
msgid "For example, if your ``tp_traverse`` function includes:"
msgstr "Por ejemplo, si la función ''tp_traverse'' incluye:"

#: ../Doc/whatsnew/3.9.rst:1171
#, fuzzy
msgid "then add:"
msgstr "a continuación, añadir:"

#: ../Doc/whatsnew/3.9.rst:1184
#, fuzzy
msgid "(See :issue:`35810` and :issue:`40217` for more information.)"
msgstr ""
"(Consulte :issue:'35810' y :issue:'40217' para obtener más información)."

#: ../Doc/whatsnew/3.9.rst:1186
#, fuzzy
msgid ""
"The functions ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` and ``PyEval_CallObjectWithKeywords`` are deprecated. "
"Use :c:func:`PyObject_Call` and its variants instead. (See more details in :"
"issue:`29548`.)"
msgstr ""
"Las funciones ''PyEval_CallObject'', ''PyEval_CallFunction'', "
"''PyEval_CallMethod'' y ''PyEval_CallObjectWithKeywords'' están en desuso. "
"Usa :c:func:'PyObject_Call' y sus variantes en su lugar. (Ver más detalles "
"en :issue:'29548'.)"

#: ../Doc/whatsnew/3.9.rst:1192
#, fuzzy
msgid "CPython bytecode changes"
msgstr "Cambios en el código de bytes de CPython"

#: ../Doc/whatsnew/3.9.rst:1194
#, fuzzy
msgid ""
"The :opcode:`LOAD_ASSERTION_ERROR` opcode was added for handling the :"
"keyword:`assert` statement. Previously, the assert statement would not work "
"correctly if the :exc:`AssertionError` exception was being shadowed. "
"(Contributed by Zackery Spytz in :issue:`34880`.)"
msgstr ""
"Se agregó el opcode :opcode:'LOAD_ASSERTION_ERROR' para manejar la "
"instrucción :keyword:'assert'. Anteriormente, la instrucción assert no "
"funcionaba correctamente si se ospedaba la excepción :exc:'AssertionError'. "
"(Contribución de Zackery Spytz en :issue:'34880'.)"

#: ../Doc/whatsnew/3.9.rst:1199
#, fuzzy
msgid ""
"The :opcode:`COMPARE_OP` opcode was split into four distinct instructions:"
msgstr ""
"El opcode :opcode:'COMPARE_OP' se dividió en cuatro instrucciones distintas:"

#: ../Doc/whatsnew/3.9.rst:1201
#, fuzzy
msgid "``COMPARE_OP`` for rich comparisons"
msgstr "''COMPARE_OP'' para comparaciones ricas"

#: ../Doc/whatsnew/3.9.rst:1202
#, fuzzy
msgid "``IS_OP`` for 'is' and 'is not' tests"
msgstr "''IS_OP'' para las pruebas 'es' y 'no es'"

#: ../Doc/whatsnew/3.9.rst:1203
#, fuzzy
msgid "``CONTAINS_OP`` for 'in' and 'not in' tests"
msgstr "''CONTAINS_OP'' para las pruebas 'in' y 'not in'"

#: ../Doc/whatsnew/3.9.rst:1204
#, fuzzy
msgid ""
"``JUMP_IF_NOT_EXC_MATCH`` for checking exceptions in 'try-except' statements."
msgstr ""
"''JUMP_IF_NOT_EXC_MATCH'' para comprobar excepciones en instrucciones 'try-"
"except'."

#: ../Doc/whatsnew/3.9.rst:1207
#, fuzzy
msgid "(Contributed by Mark Shannon in :issue:`39156`.)"
msgstr "(Contribución de Mark Shannon en :issue:'39156'.)"

#: ../Doc/whatsnew/3.9.rst:1211
#, fuzzy
msgid "Build Changes"
msgstr "Cambios en la compilación"

#: ../Doc/whatsnew/3.9.rst:1213
#, fuzzy
msgid ""
"Added ``--with-platlibdir`` option to the ``configure`` script: name of the "
"platform-specific library directory, stored in the new :attr:`sys."
"platlibdir` attribute. See :attr:`sys.platlibdir` attribute for more "
"information. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"Se agregó la opción ''--with-platlibdir'' al script ''configure'': nombre "
"del directorio de biblioteca específico de la plataforma, almacenado en el "
"nuevo atributo :attr:'sys.platlibdir'. Consulte el atributo :attr:'sys."
"platlibdir' para obtener más información. (Contribución de Jan Matějek, "
"Matěj Cepl, Charalampos Stratakis y Victor Stinner en :issue:'1294959'.)"

#: ../Doc/whatsnew/3.9.rst:1219
#, fuzzy
msgid ""
"The ``COUNT_ALLOCS`` special build macro has been removed. (Contributed by "
"Victor Stinner in :issue:`39489`.)"
msgstr ""
"Se ha eliminado la macro de compilación especial ''COUNT_ALLOCS''. "
"(Contribución de Victor Stinner en :issue:'39489'.)"

#: ../Doc/whatsnew/3.9.rst:1222
#, fuzzy
msgid ""
"On non-Windows platforms, the :c:func:`setenv` and :c:func:`unsetenv` "
"functions are now required to build Python. (Contributed by Victor Stinner "
"in :issue:`39395`.)"
msgstr ""
"En plataformas que no son Windows, las funciones :c:func:'setenv' y :c:"
"func:'unsetenv' ahora son necesarias para construir Python. (Contribución de "
"Victor Stinner en :issue:'39395'.)"

#: ../Doc/whatsnew/3.9.rst:1226
#, fuzzy
msgid ""
"On non-Windows platforms, creating ``bdist_wininst`` installers is now "
"officially unsupported.  (See :issue:`10945` for more details.)"
msgstr ""
"En plataformas que no son windows, la creación de instaladores "
"\"bdist_wininst\" ahora no es oficialmente compatible.  (Ver :issue:'10945' "
"para más detalles.)"

#: ../Doc/whatsnew/3.9.rst:1229
#, fuzzy
msgid ""
"When building Python on macOS from source, ``_tkinter`` now links with non-"
"system Tcl and Tk frameworks if they are installed in ``/Library/"
"Frameworks``, as had been the case on older releases of macOS. If a macOS "
"SDK is explicitly configured, by using :option:`--enable-universalsdk` or ``-"
"isysroot``, only the SDK itself is searched. The default behavior can still "
"be overridden with :option:`--with-tcltk-includes` and :option:`--with-tcltk-"
"libs`. (Contributed by Ned Deily in :issue:`34956`.)"
msgstr ""
"Al crear Python en macOS desde la fuente, ''_tkinter'' ahora se vincula con "
"marcos Tcl y Tk que no son del sistema si están instalados en ''/Library/"
"Frameworks'', como había sido el caso en versiones anteriores de macOS. Si "
"un SDK de macOS está configurado explícitamente, mediante :option:'--enable-"
"universalsdk' o ''-isysroot'', solo se busca en el SDK en sí. El "
"comportamiento predeterminado aún se puede anular con :option:'--with-tcltk-"
"includes' y :option:'--with-tcltk-libs'. (Contribución de Ned Deily en :"
"issue:'34956'.)"

#: ../Doc/whatsnew/3.9.rst:1238
#, fuzzy
msgid ""
"Python can now be built for Windows 10 ARM64. (Contributed by Steve Dower "
"in :issue:`33125`.)"
msgstr ""
"Python ahora se puede construir para Windows 10 ARM64. (Contribución de "
"Steve Dower en :issue:'33125'.)"

#: ../Doc/whatsnew/3.9.rst:1241
#, fuzzy
msgid ""
"Some individual tests are now skipped when ``--pgo`` is used.  The tests in "
"question increased the PGO task time significantly and likely didn't help "
"improve optimization of the final executable. This speeds up the task by a "
"factor of about 15x.  Running the full unit test suite is slow.  This change "
"may result in a slightly less optimized build since not as many code "
"branches will be executed.  If you are willing to wait for the much slower "
"build, the old behavior can be restored using ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``.  We make no guarantees as to "
"which PGO task set produces a faster build.  Users who care should run their "
"own relevant benchmarks as results can depend on the environment, workload, "
"and compiler tool chain. (See :issue:`36044` and :issue:`37707` for more "
"details.)"
msgstr ""
"Algunas pruebas individuales ahora se omiten cuando se usa ''--pgo''.  Las "
"pruebas en cuestión aumentaron significativamente el tiempo de tarea de PGO "
"y probablemente no ayudaron a mejorar la optimización del ejecutable final. "
"Esto acelera la tarea en un factor de aproximadamente 15x.  La ejecución del "
"conjunto de pruebas unitarias completas es lenta.  Este cambio puede "
"resultar en una compilación ligeramente menos optimizada, ya que no se "
"ejecutarán tantas ramas de código.  Si está dispuesto a esperar la "
"compilación mucho más lenta, el comportamiento anterior se puede restaurar "
"usando ''./configure [..] PROFILE_TASK=\"-m test --pgo-extended\"''.  No "
"garantizamos qué conjunto de tareas de PGO produce una compilación más "
"rápida.  Los usuarios que se preocupan deben ejecutar sus propios puntos de "
"referencia relevantes, ya que los resultados pueden depender del entorno, la "
"carga de trabajo y la cadena de herramientas del compilador. (Consulte :"
"issue:'36044' y :issue:'37707' para obtener más detalles)."

#: ../Doc/whatsnew/3.9.rst:1256
#, fuzzy
msgid "C API Changes"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.9.rst:1261
#, fuzzy
msgid ""
":pep:`573`: Added :c:func:`PyType_FromModuleAndSpec` to associate a module "
"with a class; :c:func:`PyType_GetModule` and :c:func:`PyType_GetModuleState` "
"to retrieve the module and its state; and :c:data:`PyCMethod` and :c:data:"
"`METH_METHOD` to allow a method to access the class it was defined in. "
"(Contributed by Marcel Plch and Petr Viktorin in :issue:`38787`.)"
msgstr ""
":p ep:'573': Añadido :c:func:'PyType_FromModuleAndSpec' para asociar un "
"módulo con una clase; :c:func:'PyType_GetModule' y :c:"
"func:'PyType_GetModuleState' para recuperar el módulo y su estado; y :c:"
"data:'PyCMethod' y :c:data:'METH_METHOD' para permitir que un método acceda "
"a la clase en la que se definió. (Contribución de Marcel Plch y Petr "
"Viktorin en :issue:'38787'.)"

#: ../Doc/whatsnew/3.9.rst:1268
#, fuzzy
msgid ""
"Added :c:func:`PyFrame_GetCode` function: get a frame code. Added :c:func:"
"`PyFrame_GetBack` function: get the frame next outer frame. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Añadida la función :c:func:'PyFrame_GetCode': obtener un código de marco. "
"Añadida la función :c:func:'PyFrame_GetBack': obtener el fotograma siguiente "
"fotograma exterior. (Contribución de Victor Stinner en :issue:'40421'.)"

#: ../Doc/whatsnew/3.9.rst:1272
#, fuzzy
msgid ""
"Added :c:func:`PyFrame_GetLineNumber` to the limited C API. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Se ha añadido :c:func:'PyFrame_GetLineNumber' a la API de C limitada. "
"(Contribución de Victor Stinner en :issue:'40421'.)"

#: ../Doc/whatsnew/3.9.rst:1275
#, fuzzy
msgid ""
"Added :c:func:`PyThreadState_GetInterpreter` and :c:func:"
"`PyInterpreterState_Get` functions to get the interpreter. Added :c:func:"
"`PyThreadState_GetFrame` function to get the current frame of a Python "
"thread state. Added :c:func:`PyThreadState_GetID` function: get the unique "
"identifier of a Python thread state. (Contributed by Victor Stinner in :"
"issue:`39947`.)"
msgstr ""
"Se agregaron las funciones :c:func:'PyThreadState_GetInterpreter' y :c:"
"func:'PyInterpreterState_Get' para obtener el intérprete. Se agregó la "
"función :c:func:'PyThreadState_GetFrame' para obtener el marco actual de un "
"estado de subproceso de Python. Añadida la función :c:"
"func:'PyThreadState_GetID': obtener el identificador único de un estado de "
"subproceso de Python. (Contribución de Victor Stinner en :issue:'39947'.)"

#: ../Doc/whatsnew/3.9.rst:1283
#, fuzzy
msgid ""
"Added a new public :c:func:`PyObject_CallNoArgs` function to the C API, "
"which calls a callable Python object without any arguments. It is the most "
"efficient way to call a callable Python object without any argument. "
"(Contributed by Victor Stinner in :issue:`37194`.)"
msgstr ""
"Se agregó una nueva función pública :c:func:'PyObject_CallNoArgs' a la API "
"de C, que llama a un objeto Python al que se puede llamar sin ningún "
"argumento. Es la forma más eficiente de llamar a un objeto Python llamable "
"sin ningún argumento. (Contribución de Victor Stinner en :issue:'37194'.)"

#: ../Doc/whatsnew/3.9.rst:1288 ../Doc/whatsnew/3.9.rst:1410
#, fuzzy
msgid "Changes in the limited C API (if ``Py_LIMITED_API`` macro is defined):"
msgstr ""
"Cambios en la API de C limitada (si se define la macro ''Py_LIMITED_API''):"

#: ../Doc/whatsnew/3.9.rst:1290
#, fuzzy
msgid ""
"Provide :c:func:`Py_EnterRecursiveCall` and :c:func:`Py_LeaveRecursiveCall` "
"as regular functions for the limited API. Previously, there were defined as "
"macros, but these macros didn't compile with the limited C API which cannot "
"access ``PyThreadState.recursion_depth`` field (the structure is opaque in "
"the limited C API)."
msgstr ""
"Proporcione :c:func:'Py_EnterRecursiveCall' y :c:"
"func:'Py_LeaveRecursiveCall' como funciones regulares para la API limitada. "
"Anteriormente, se definían como macros, pero estas macros no se compilaban "
"con la API de C limitada que no puede acceder al campo ''PyThreadState."
"recursion_depth'' (la estructura es opaca en la API de C limitada)."

#: ../Doc/whatsnew/3.9.rst:1296
#, fuzzy
msgid ""
"``PyObject_INIT()`` and ``PyObject_INIT_VAR()`` become regular \"opaque\" "
"function to hide implementation details."
msgstr ""
"''PyObject_INIT()'' y ''PyObject_INIT_VAR()'' se convierten en funciones "
"\"opacas\" regulares para ocultar los detalles de la implementación."

#: ../Doc/whatsnew/3.9.rst:1299 ../Doc/whatsnew/3.9.rst:1437
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`38644` and :issue:`39542`.)"
msgstr "(Contribución de Victor Stinner en :issue:'38644' y :issue:'39542'.)"

#: ../Doc/whatsnew/3.9.rst:1301
#, fuzzy
msgid ""
"The :c:func:`PyModule_AddType` function is added to help adding a type to a "
"module. (Contributed by Dong-hee Na in :issue:`40024`.)"
msgstr ""
"La función :c:func:'PyModule_AddType' se agrega para ayudar a agregar un "
"tipo a un módulo. (Contribución de Dong-hee Na en :issue:'40024'.)"

#: ../Doc/whatsnew/3.9.rst:1305
#, fuzzy
msgid ""
"Added the functions :c:func:`PyObject_GC_IsTracked` and :c:func:"
"`PyObject_GC_IsFinalized` to the public API to allow to query if Python "
"objects are being currently tracked or have been already finalized by the "
"garbage collector respectively. (Contributed by Pablo Galindo Salgado in :"
"issue:`40241`.)"
msgstr ""
"Se agregaron las funciones :c:func:'PyObject_GC_IsTracked' y :c:"
"func:'PyObject_GC_IsFinalized' a la API pública para permitir consultar si "
"los objetos de Python están siendo rastreados actualmente o ya han sido "
"finalizados por el recolector de basura respectivamente. (Contribución de "
"Pablo Galindo Salgado en :issue:'40241'.)"

#: ../Doc/whatsnew/3.9.rst:1311
#, fuzzy
msgid ""
"Added :c:func:`_PyObject_FunctionStr` to get a user-friendly string "
"representation of a function-like object. (Patch by Jeroen Demeyer in :issue:"
"`37645`.)"
msgstr ""
"Se agregó :c:func:'_PyObject_FunctionStr' para obtener una representación de "
"cadena fácil de usar de un objeto similar a una función. (Parche de Jeroen "
"Demeyer en :issue:'37645'.)"

#: ../Doc/whatsnew/3.9.rst:1315
#, fuzzy
msgid ""
"Added :c:func:`PyObject_CallOneArg` for calling an object with one "
"positional argument (Patch by Jeroen Demeyer in :issue:`37483`.)"
msgstr ""
"Añadido :c:func:'PyObject_CallOneArg' para llamar a un objeto con un "
"argumento posicional (Parche de Jeroen Demeyer en :issue:'37483')."

#: ../Doc/whatsnew/3.9.rst:1323
#, fuzzy
msgid ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) now requires a new mandatory "
"*tstate* parameter (``PyThreadState*``). (Contributed by Victor Stinner in :"
"issue:`38500`.)"
msgstr ""
"''PyInterpreterState.eval_frame'' (:p ep:'523') ahora requiere un nuevo "
"parámetro obligatorio *tstate* (''PyThreadState*''). (Contribución de Victor "
"Stinner en :issue:'38500'.)"

#: ../Doc/whatsnew/3.9.rst:1327
#, fuzzy
msgid ""
"Extension modules: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` and :c:member:`~PyModuleDef.m_free` functions of :c:"
"type:`PyModuleDef` are no longer called if the module state was requested "
"but is not allocated yet. This is the case immediately after the module is "
"created and before the module is executed (:c:data:`Py_mod_exec` function). "
"More precisely, these functions are not called if :c:member:`~PyModuleDef."
"m_size` is greater than 0 and the module state (as returned by :c:func:"
"`PyModule_GetState`) is ``NULL``."
msgstr ""
"Los módulos de extensión: :c:member:'~PyModuleDef.m_traverse', :c:"
"member:'~PyModuleDef.m_clear' y :c:member:'~PyModuleDef.m_free' funciones "
"de :c:type:'PyModuleDef' ya no se llaman si se solicitó el estado del módulo "
"pero aún no se ha asignado. Este es el caso inmediatamente después de que se "
"crea el módulo y antes de que se ejecute el módulo (función:c:"
"data:'Py_mod_exec'). Más precisamente, estas funciones no se llaman si :c:"
"member:'~PyModuleDef.m_size' es mayor que 0 y el estado del módulo (como lo "
"devuelve :c:func:'PyModule_GetState') es ''NULL''."

#: ../Doc/whatsnew/3.9.rst:1336
#, fuzzy
msgid ""
"Extension modules without module state (``m_size <= 0``) are not affected."
msgstr ""
"Los módulos de extensión sin estado de módulo (''m_size <= 0'') no se ven "
"afectados."

#: ../Doc/whatsnew/3.9.rst:1338
#, fuzzy
msgid ""
"If :c:func:`Py_AddPendingCall` is called in a subinterpreter, the function "
"is now scheduled to be called from the subinterpreter, rather than being "
"called from the main interpreter. Each subinterpreter now has its own list "
"of scheduled calls. (Contributed by Victor Stinner in :issue:`39984`.)"
msgstr ""
"Si se llama a :c:func:'Py_AddPendingCall' en un subinterpreter, ahora se "
"programa que la función se llame desde el subinterpreter, en lugar de "
"llamarse desde el intérprete principal. Cada subinterpreter ahora tiene su "
"propia lista de llamadas programadas. (Contribución de Victor Stinner en :"
"issue:'39984'.)"

#: ../Doc/whatsnew/3.9.rst:1344
#, fuzzy
msgid ""
"The Windows registry is no longer used to initialize :data:`sys.path` when "
"the ``-E`` option is used (if :c:member:`PyConfig.use_environment` is set to "
"``0``). This is significant when embedding Python on Windows. (Contributed "
"by Zackery Spytz in :issue:`8901`.)"
msgstr ""
"El registro de Windows ya no se utiliza para inicializar :d ata:'sys.path' "
"cuando se utiliza la opción ''-E'' (si :c:member:'PyConfig.use_environment' "
"se establece en ''0''). Esto es significativo cuando se incrusta Python en "
"Windows. (Contribución de Zackery Spytz en :issue:'8901'.)"

#: ../Doc/whatsnew/3.9.rst:1349
#, fuzzy
msgid ""
"The global variable :c:data:`PyStructSequence_UnnamedField` is now a "
"constant and refers to a constant string. (Contributed by Serhiy Storchaka "
"in :issue:`38650`.)"
msgstr ""
"La variable global :c:data:'PyStructSequence_UnnamedField' es ahora una "
"constante y se refiere a una cadena constante. (Contribución de Serhiy "
"Storchaka en :issue:'38650'.)"

#: ../Doc/whatsnew/3.9.rst:1353
#, fuzzy
msgid ""
"The :c:type:`PyGC_Head` structure is now opaque. It is only defined in the "
"internal C API (``pycore_gc.h``). (Contributed by Victor Stinner in :issue:"
"`40241`.)"
msgstr ""
"La estructura :c:type:'PyGC_Head' es ahora opaca. Solo se define en la API "
"interna de C (''pycore_gc.h''). (Contribución de Victor Stinner en :"
"issue:'40241'.)"

#: ../Doc/whatsnew/3.9.rst:1357
#, fuzzy
msgid ""
"The ``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`PyUnicode_FromUnicode`, :c:func:`PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode``, and :c:func:`PyUnicode_AsUnicodeAndSize` are "
"marked as deprecated in C.  They have been deprecated by :pep:`393` since "
"Python 3.3. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"Los ''Py_UNICODE_COPY'', ''Py_UNICODE_FILL'', ''PyUnicode_WSTR_LENGTH'', :c:"
"func:'PyUnicode_FromUnicode', :c:func:''PyUnicode_AsUnicode'', "
"''_PyUnicode_AsUnicode'', y :c:func:'PyUnicode_AsUnicodeAndSize' están "
"marcados como obsoletos en C.  Han quedado en desuso por :p ep:'393' desde "
"Python 3.3. (Contribución de Inada Naoki en :issue:'36346'.)"

#: ../Doc/whatsnew/3.9.rst:1364
#, fuzzy
msgid ""
"The :c:func:`Py_FatalError` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined. (Contributed by Victor Stinner in :"
"issue:`39882`.)"
msgstr ""
"La función :c:func:'Py_FatalError' se reemplaza por una macro que registra "
"automáticamente el nombre de la función actual, a menos que se defina la "
"macro ''Py_LIMITED_API''. (Contribución de Victor Stinner en :issue:'39882'.)"

#: ../Doc/whatsnew/3.9.rst:1369
#, fuzzy
msgid ""
"The vectorcall protocol now requires that the caller passes only strings as "
"keyword names. (See :issue:`37540` for more information.)"
msgstr ""
"El protocolo vectorcall ahora requiere que el autor de la llamada pase solo "
"cadenas como nombres de palabras clave. (Consulte :issue:'37540' para "
"obtener más información)."

#: ../Doc/whatsnew/3.9.rst:1372
#, fuzzy
msgid ""
"Implementation details of a number of macros and functions are now hidden:"
msgstr ""
"Los detalles de implementación de una serie de macros y funciones ahora "
"están ocultos:"

#: ../Doc/whatsnew/3.9.rst:1374
#, fuzzy
msgid ":c:func:`PyObject_IS_GC` macro was converted to a function."
msgstr ":c:func:'PyObject_IS_GC' macro se convirtió en una función."

#: ../Doc/whatsnew/3.9.rst:1376
#, fuzzy
msgid ""
"The :c:func:`PyObject_NEW` macro becomes an alias to the :c:func:"
"`PyObject_New` macro, and the :c:func:`PyObject_NEW_VAR` macro becomes an "
"alias to the :c:func:`PyObject_NewVar` macro. They no longer access directly "
"the :c:member:`PyTypeObject.tp_basicsize` member."
msgstr ""
"La macro :c:func:'PyObject_NEW' se convierte en un alias de la macro :c:"
"func:'PyObject_New', y la macro :c:func:'PyObject_NEW_VAR' se convierte en "
"un alias de la macro :c:func:'PyObject_NewVar'. Ya no acceden directamente "
"al miembro :c:member:'PyTypeObject.tp_basicsize'."

#: ../Doc/whatsnew/3.9.rst:1381
#, fuzzy
msgid ""
":c:func:`PyType_HasFeature` now always calls :c:func:`PyType_GetFlags`. "
"Previously, it accessed directly the :c:member:`PyTypeObject.tp_flags` "
"member when the limited C API was not used."
msgstr ""
":c:func:'PyType_HasFeature' ahora siempre llama :c:func:'PyType_GetFlags'. "
"Anteriormente, accedía directamente al miembro :c:member:'PyTypeObject."
"tp_flags' cuando no se usaba la API de C limitada."

#: ../Doc/whatsnew/3.9.rst:1385
#, fuzzy
msgid ""
":c:func:`PyObject_GET_WEAKREFS_LISTPTR` macro was converted to a function: "
"the macro accessed directly the :c:member:`PyTypeObject.tp_weaklistoffset` "
"member."
msgstr ""
":c:func:'PyObject_GET_WEAKREFS_LISTPTR' macro se convirtió en una función: "
"la macro accedió directamente al miembro :c:member:'PyTypeObject."
"tp_weaklistoffset'."

#: ../Doc/whatsnew/3.9.rst:1389
#, fuzzy
msgid ""
":c:func:`PyObject_CheckBuffer` macro was converted to a function: the macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_buffer` member."
msgstr ""
":c:func:'PyObject_CheckBuffer' macro se convirtió en una función: la macro "
"accedió directamente al miembro :c:member:'PyTypeObject.tp_as_buffer'."

#: ../Doc/whatsnew/3.9.rst:1392
#, fuzzy
msgid ""
":c:func:`PyIndex_Check` is now always declared as an opaque function to hide "
"implementation details: removed the ``PyIndex_Check()`` macro. The macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_number` member."
msgstr ""
":c:func:'PyIndex_Check' ahora siempre se declara como una función opaca para "
"ocultar los detalles de implementación: se eliminó la macro "
"''PyIndex_Check()''. La macro accedió directamente al miembro :c:"
"member:'PyTypeObject.tp_as_number'."

#: ../Doc/whatsnew/3.9.rst:1396
#, fuzzy
msgid "(See :issue:`40170` for more details.)"
msgstr "(Ver :issue:'40170' para más detalles.)"

#: ../Doc/whatsnew/3.9.rst:1401
#, fuzzy
msgid ""
"Excluded ``PyFPE_START_PROTECT()`` and ``PyFPE_END_PROTECT()`` macros of "
"``pyfpe.h`` from the limited C API. (Contributed by Victor Stinner in :issue:"
"`38835`.)"
msgstr ""
"Se excluyeron las macros ''PyFPE_START_PROTECT()'' y ''PyFPE_END_PROTECT()'' "
"de ''pyfpe.h'' de la API de C limitada. (Contribución de Victor Stinner en :"
"issue:'38835'.)"

#: ../Doc/whatsnew/3.9.rst:1405
#, fuzzy
msgid ""
"The ``tp_print`` slot of :ref:`PyTypeObject <type-structs>` has been "
"removed. It was used for printing objects to files in Python 2.7 and before. "
"Since Python 3.0, it has been ignored and unused. (Contributed by Jeroen "
"Demeyer in :issue:`36974`.)"
msgstr ""
"Se ha eliminado la ranura ''tp_print'' de :ref:'PyTypeObject'. <type-"
"structs> Se usaba para imprimir objetos en archivos en Python 2.7 y "
"anteriores. Desde Python 3.0, se ha ignorado y no se ha utilizado. "
"(Contribución de Jeroen Demeyer en :issue:'36974'.)</type-structs>"

#: ../Doc/whatsnew/3.9.rst:1412
#, fuzzy
msgid "Excluded the following functions from the limited C API:"
msgstr "Se excluyeron las siguientes funciones de la API de C limitada:"

#: ../Doc/whatsnew/3.9.rst:1414
#, fuzzy
msgid ""
"``PyThreadState_DeleteCurrent()`` (Contributed by Joannah Nanjekye in :issue:"
"`37878`.)"
msgstr ""
"''PyThreadState_DeleteCurrent()'' (Contribución de Joannah Nanjekye en :"
"issue:'37878'.)"

#: ../Doc/whatsnew/3.9.rst:1416
#, fuzzy
msgid "``_Py_CheckRecursionLimit``"
msgstr "''_Py_CheckRecursionLimit''"

#: ../Doc/whatsnew/3.9.rst:1417
#, fuzzy
msgid "``_Py_NewReference()``"
msgstr "''_Py_NewReference()''"

#: ../Doc/whatsnew/3.9.rst:1418
#, fuzzy
msgid "``_Py_ForgetReference()``"
msgstr "''_Py_ForgetReference()''"

#: ../Doc/whatsnew/3.9.rst:1419
#, fuzzy
msgid "``_PyTraceMalloc_NewReference()``"
msgstr "''_PyTraceMalloc_NewReference()''"

#: ../Doc/whatsnew/3.9.rst:1420
#, fuzzy
msgid "``_Py_GetRefTotal()``"
msgstr "''_Py_GetRefTotal()''"

#: ../Doc/whatsnew/3.9.rst:1421
#, fuzzy
msgid "The trashcan mechanism which never worked in the limited C API."
msgstr ""
"El mecanismo de la papelera que nunca funcionó en la API de C limitada."

#: ../Doc/whatsnew/3.9.rst:1422
#, fuzzy
msgid "``PyTrash_UNWIND_LEVEL``"
msgstr "''PyTrash_UNWIND_LEVEL''"

#: ../Doc/whatsnew/3.9.rst:1423
#, fuzzy
msgid "``Py_TRASHCAN_BEGIN_CONDITION``"
msgstr "''Py_TRASHCAN_BEGIN_CONDITION''"

#: ../Doc/whatsnew/3.9.rst:1424
#, fuzzy
msgid "``Py_TRASHCAN_BEGIN``"
msgstr "''Py_TRASHCAN_BEGIN''"

#: ../Doc/whatsnew/3.9.rst:1425
#, fuzzy
msgid "``Py_TRASHCAN_END``"
msgstr "''Py_TRASHCAN_END''"

#: ../Doc/whatsnew/3.9.rst:1426
#, fuzzy
msgid "``Py_TRASHCAN_SAFE_BEGIN``"
msgstr "''Py_TRASHCAN_SAFE_BEGIN''"

#: ../Doc/whatsnew/3.9.rst:1427
#, fuzzy
msgid "``Py_TRASHCAN_SAFE_END``"
msgstr "''Py_TRASHCAN_SAFE_END''"

#: ../Doc/whatsnew/3.9.rst:1429
#, fuzzy
msgid "Moved following functions and definitions to the internal C API:"
msgstr ""
"Se han movido las siguientes funciones y definiciones a la API de C interna:"

#: ../Doc/whatsnew/3.9.rst:1431
#, fuzzy
msgid "``_PyDebug_PrintTotalRefs()``"
msgstr "''_PyDebug_PrintTotalRefs()''"

#: ../Doc/whatsnew/3.9.rst:1432
#, fuzzy
msgid "``_Py_PrintReferences()``"
msgstr "''_Py_PrintReferences()''"

#: ../Doc/whatsnew/3.9.rst:1433
#, fuzzy
msgid "``_Py_PrintReferenceAddresses()``"
msgstr "''_Py_PrintReferenceAddresses()''"

#: ../Doc/whatsnew/3.9.rst:1434
#, fuzzy
msgid "``_Py_tracemalloc_config``"
msgstr "''_Py_tracemalloc_config''"

#: ../Doc/whatsnew/3.9.rst:1435
#, fuzzy
msgid "``_Py_AddToAllObjects()`` (specific to ``Py_TRACE_REFS`` build)"
msgstr "''_Py_AddToAllObjects()'' (específico de ''Py_TRACE_REFS'' build)"

#: ../Doc/whatsnew/3.9.rst:1439
#, fuzzy
msgid ""
"Removed ``_PyRuntime.getframe`` hook and removed ``_PyThreadState_GetFrame`` "
"macro which was an alias to ``_PyRuntime.getframe``. They were only exposed "
"by the internal C API. Removed also ``PyThreadFrameGetter`` type. "
"(Contributed by Victor Stinner in :issue:`39946`.)"
msgstr ""
"Se eliminó el gancho ''_PyRuntime.getframe'' y se eliminó la macro "
"''_PyThreadState_GetFrame'', que era un alias de ''_PyRuntime.getframe''. "
"Solo fueron expuestos por la API de C interna. Se ha eliminado también el "
"tipo ''PyThreadFrameGetter''. (Contribución de Victor Stinner en :"
"issue:'39946'.)"

#: ../Doc/whatsnew/3.9.rst:1444
#, fuzzy
msgid ""
"Removed the following functions from the C API. Call :c:func:`PyGC_Collect` "
"explicitly to clear all free lists. (Contributed by Inada Naoki and Victor "
"Stinner in :issue:`37340`, :issue:`38896` and :issue:`40428`.)"
msgstr ""
"Se han quitado las siguientes funciones de la API de C. Llame a :c:"
"func:'PyGC_Collect' explícitamente para borrar todas las listas gratuitas. "
"(Contribución de Inada Naoki y Victor Stinner en :issue:'37340', :"
"issue:'38896' y :issue:'40428'.)"

#: ../Doc/whatsnew/3.9.rst:1449
#, fuzzy
msgid "``PyAsyncGen_ClearFreeLists()``"
msgstr "''PyAsyncGen_ClearFreeLists()''"

#: ../Doc/whatsnew/3.9.rst:1450
#, fuzzy
msgid "``PyContext_ClearFreeList()``"
msgstr "''PyContext_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1451
#, fuzzy
msgid "``PyDict_ClearFreeList()``"
msgstr "''PyDict_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1452
#, fuzzy
msgid "``PyFloat_ClearFreeList()``"
msgstr "''PyFloat_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1453
#, fuzzy
msgid "``PyFrame_ClearFreeList()``"
msgstr "''PyFrame_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1454
#, fuzzy
msgid "``PyList_ClearFreeList()``"
msgstr "''PyList_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1455
#, fuzzy
msgid ""
"``PyMethod_ClearFreeList()`` and ``PyCFunction_ClearFreeList()``: the free "
"lists of bound method objects have been removed."
msgstr ""
"''PyMethod_ClearFreeList()'' y ''PyCFunction_ClearFreeList()'': se han "
"eliminado las listas libres de objetos de método enlazados."

#: ../Doc/whatsnew/3.9.rst:1457
#, fuzzy
msgid ""
"``PySet_ClearFreeList()``: the set free list has been removed in Python 3.4."
msgstr ""
"''PySet_ClearFreeList()'': la lista libre establecida se ha eliminado en "
"Python 3.4."

#: ../Doc/whatsnew/3.9.rst:1459
#, fuzzy
msgid "``PyTuple_ClearFreeList()``"
msgstr "''PyTuple_ClearFreeList()''"

#: ../Doc/whatsnew/3.9.rst:1460
#, fuzzy
msgid ""
"``PyUnicode_ClearFreeList()``: the Unicode free list has been removed in "
"Python 3.3."
msgstr ""
"''PyUnicode_ClearFreeList()'': la lista libre de Unicode se ha eliminado en "
"Python 3.3."

#: ../Doc/whatsnew/3.9.rst:1463
#, fuzzy
msgid ""
"Removed ``_PyUnicode_ClearStaticStrings()`` function. (Contributed by Victor "
"Stinner in :issue:`39465`.)"
msgstr ""
"Se ha eliminado la función ''_PyUnicode_ClearStaticStrings()''. "
"(Contribución de Victor Stinner en :issue:'39465'.)"

#: ../Doc/whatsnew/3.9.rst:1466
#, fuzzy
msgid ""
"Removed ``Py_UNICODE_MATCH``. It has been deprecated by :pep:`393`, and "
"broken since Python 3.3. The :c:func:`PyUnicode_Tailmatch` function can be "
"used instead. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"Eliminado ''Py_UNICODE_MATCH''. Ha sido obsoleto por :p ep:'393', y roto "
"desde Python 3.3. En su lugar, se puede utilizar la función :c:"
"func:'PyUnicode_Tailmatch'. (Contribución de Inada Naoki en :issue:'36346'.)"

#: ../Doc/whatsnew/3.9.rst:1471
#, fuzzy
msgid ""
"Cleaned header files of interfaces defined but with no implementation. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contributed by Pablo Galindo Salgado in :issue:"
"`39372`.)"
msgstr ""
"Archivos de encabezado limpiados de interfaces definidas pero sin "
"implementación. Los símbolos públicos de la API que se eliminan son: "
"''_PyBytes_InsertThousandsGroupingLocale'', "
"''_PyBytes_InsertThousandsGrouping'', ''_Py_InitializeFromArgs'', "
"''_Py_InitializeFromWideArgs'', ''_PyFloat_Repr'', ''_PyFloat_Digits'', "
"''_PyFloat_DigitsInit'', ''PyFrame_ExtendStack'', ''_PyAIterWrapper_Type'', "
"''PyNullImporter_Type'', ''PyCmpWrapper_Type'', ''PySortWrapper_Type'', "
"''PyNoArgsFunction''. (Contribución de Pablo Galindo Salgado en :"
"issue:'39372'.)"

#: ../Doc/whatsnew/3.9.rst:1482
#, fuzzy
msgid "Notable changes in Python 3.9.1"
msgstr "Cambios notables en Python 3.9.1"

#: ../Doc/whatsnew/3.9.rst:1487
#, fuzzy
msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
"El comportamiento de :class:'typing. Literal' se cambió para ajustarse a :p "
"ep:'586' y para que coincida con el comportamiento de los verificadores de "
"tipo estático especificados en el PEP."

#: ../Doc/whatsnew/3.9.rst:1490
#, fuzzy
msgid "``Literal`` now de-duplicates parameters."
msgstr "''Literal'' ahora desduplica los parámetros."

#: ../Doc/whatsnew/3.9.rst:1491
#, fuzzy
msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr ""
"Las comparaciones de igualdad entre objetos \"literales\" ahora son "
"independientes del orden."

#: ../Doc/whatsnew/3.9.rst:1492
#, fuzzy
msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"Las comparaciones ''literales'' ahora respetan los tipos.  Por ejemplo, "
"''Literal[0] == Literal[Falso]'' previamente evaluado a ''Verdadero''.  "
"Ahora es ''Falso''.  Para admitir este cambio, la memoria caché de tipos "
"utilizada internamente ahora admite tipos diferenciadores."

#: ../Doc/whatsnew/3.9.rst:1496
#, fuzzy
msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with mutable parameters will not throw an "
"error::"
msgstr ""
"Los objetos ''Literal'' ahora plantearán una excepción :exc:'TypeError' "
"durante las comparaciones de igualdad si alguno de sus parámetros no es :"
"term:'hashable'. Tenga en cuenta que declarar ''Literal'' con parámetros "
"mutables no arrojará un error:"

#: ../Doc/whatsnew/3.9.rst:1508
#, fuzzy
msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "(Contribución de Yurii Karabas en :issue:'42345'.)"

#: ../Doc/whatsnew/3.9.rst:1511
#, fuzzy
msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "Compatibilidad con macOS 11.0 (Big Sur) y Apple Silicon Mac"

#: ../Doc/whatsnew/3.9.rst:1513
#, fuzzy
msgid ""
"As of 3.9.1, Python now fully supports building and running on macOS 11.0 "
"(Big Sur) and on Apple Silicon Macs (based on the ``ARM64`` architecture). A "
"new universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Binaries "
"can also now be built on current versions of macOS to be deployed on a range "
"of older macOS versions (tested to 10.9) while making some newer OS "
"functions and options conditionally available based on the operating system "
"version in use at runtime (\"weaklinking\")."
msgstr ""
"A partir de la versión 3.9.1, Python ahora es totalmente compatible con la "
"creación y ejecución en macOS 11.0 (Big Sur) y en Apple Silicon Macs (basado "
"en la arquitectura ''ARM64''). Una nueva variante de compilación universal, "
"''universal2'', ahora está disponible para admitir de forma nativa tanto "
"''ARM64'' como ''Intel 64'' en un conjunto de ejecutables. Los binarios "
"ahora también se pueden construir en las versiones actuales de macOS para "
"implementarse en una gama de versiones anteriores de macOS (probadas hasta "
"la 10.9) al tiempo que hacen que algunas funciones y opciones más nuevas del "
"sistema operativo estén disponibles condicionalmente según la versión del "
"sistema operativo en uso en tiempo de ejecución (\"weaklinking\")."

#: ../Doc/whatsnew/3.9.rst:1522
#, fuzzy
msgid "(Contributed by Ronald Oussoren and Lawrence D'Anna in :issue:`41100`.)"
msgstr "(Contribución de Ronald Oussoren y Lawrence D'Anna en :issue:'41100'.)"

#: ../Doc/whatsnew/3.9.rst:1525
#, fuzzy
msgid "Notable changes in Python 3.9.2"
msgstr "Cambios notables en Python 3.9.2"

#: ../Doc/whatsnew/3.9.rst:1528
#, fuzzy
msgid "collections.abc"
msgstr "colecciones.abc"

#: ../Doc/whatsnew/3.9.rst:1530
#, fuzzy
msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  To allow "
"this change, :class:`types.GenericAlias` can now be subclassed, and a "
"subclass will be returned when subscripting the :class:`collections.abc."
"Callable` type. Code which accesses the arguments via :func:`typing."
"get_args` or ``__args__`` need to account for this change.  A :exc:"
"`DeprecationWarning` may be emitted for invalid forms of parameterizing :"
"class:`collections.abc.Callable` which may have passed silently in Python "
"3.9.1.  This :exc:`DeprecationWarning` will become a :exc:`TypeError` in "
"Python 3.10. (Contributed by Ken Jin in :issue:`42195`.)"
msgstr ""
":class:'collections.abc.Callable' generic ahora aplana los parámetros de "
"tipo, de forma similar a lo que :d ata:'typing. Callable' actualmente lo "
"hace.  Esto significa que ''collections.abc.Callable[[int, str], str]'' "
"tendrá ''__args__'' de ''(int, str, str)''; anteriormente esto era ''([int, "
"str], str)''.  Para permitir este cambio, :class:'types. GenericAlias' ahora "
"se puede subclasificar y se devolverá una subclase al subscriptar el tipo :"
"class:'collections.abc.Callable'. El código que accede a los argumentos a "
"través de :func:'typing.get_args' o ''__args__'' debe tener en cuenta este "
"cambio.  Se puede emitir un :exc:'DeprecationWarning' para formas no válidas "
"de parametrización :class:'collections.abc.Callable' que pueden haber pasado "
"silenciosamente en Python 3.9.1.  Este :exc:'DeprecationWarning' se "
"convertirá en un :exc:'TypeError' en Python 3.10. (Contribución de Ken Jin "
"en :issue:'42195'.)"

#: ../Doc/whatsnew/3.9.rst:1544
#, fuzzy
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../Doc/whatsnew/3.9.rst:1546
#, fuzzy
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Las versiones anteriores de Python permitían usar '';'' y ''&'' como "
"separadores de parámetros de consulta en :func:'urllib.parse.parse_qs' y :"
"func:'urllib.parse.parse_qsl'.  Debido a problemas de seguridad, y para "
"cumplir con las nuevas recomendaciones del W3C, esto se ha cambiado para "
"permitir solo una sola clave separadora, con ''&'' como valor "
"predeterminado.  Este cambio también afecta a :func:'cgi.parse' y :func:'cgi."
"parse_multipart', ya que utilizan las funciones afectadas internamente. Para "
"obtener más detalles, consulte su documentación respectiva. (Contribución de "
"Adam Goldschmidt, Senthil Kumaran y Ken Jin en :issue:'42967'.)"
